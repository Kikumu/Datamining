

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 27 22:32:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	strings
   375  0003                     __pstrings:	
   376  0003                     stringtab:	
   377  0003                     __stringtab:	
   378  0003                     stringcode:	
   379                           ;	String table - string pointers are 1 byte each
   380                           
   381  0003                     stringdir:	
   382  0003  3000               	movlw	high stringdir
   383  0004  008A               	movwf	10
   384  0005  0804               	movf	4,w
   385  0006  0A84               	incf	4,f
   386  0007  0782               	addwf	2,f
   387  0008                     __stringbase:	
   388  0008  3400               	retlw	0
   389  0009                     __end_of__stringtab:	
   390  0009                     _table:	
   391  0009  3400               	retlw	0
   392  000A  3443               	retlw	67
   393  000B  3407               	retlw	7
   394  000C  3424               	retlw	36
   395  000D  3411               	retlw	17
   396  000E  3406               	retlw	6
   397  000F  3409               	retlw	9
   398  0010  3400               	retlw	0
   399  0011                     __end_of_table:	
   400  0008                     _PORTD	set	8
   401  0034                     _RB4	set	52
   402  0031                     _RB1	set	49
   403  0035                     _RB5	set	53
   404  0030                     _RB0	set	48
   405  0038                     _RC0	set	56
   406  0049                     _RE1	set	73
   407  002B                     _RA3	set	43
   408  002C                     _RA4	set	44
   409  002D                     _RA5	set	45
   410  002A                     _RA2	set	42
   411  0028                     _RA0	set	40
   412  0087                     _TRISC	set	135
   413  0085                     _TRISA	set	133
   414  0089                     _TRISE	set	137
   415  0081                     _OPTION_REG	set	129
   416  0088                     _TRISD	set	136
   417  009F                     _ADCON1	set	159
   418  0086                     _TRISB	set	134
   419  0434                     _TRISB4	set	1076
   420  0438                     _TRISC0	set	1080
   421  0428                     _TRISA0	set	1064
   422                           
   423                           ; #config settings
   424  0000                     
   425                           	psect	cinit
   426  07F3                     start_initialization:	
   427  07F3                     __initialization:	
   428                           
   429                           ; Clear objects allocated to BANK0
   430  07F3  1383               	bcf	3,7	;select IRP bank0
   431  07F4  3020               	movlw	low __pbssBANK0
   432  07F5  0084               	movwf	4
   433  07F6  3034               	movlw	low (__pbssBANK0+20)
   434  07F7  120A  118A  20A8  120A  118A  	fcall	clear_ram0
   435  07FC                     end_of_initialization:	
   436                           ;End of C runtime variable initialization code
   437                           
   438  07FC                     __end_of__initialization:	
   439  07FC  0183               	clrf	3
   440  07FD  120A  118A  2C9F   	ljmp	_main	;jump to C main() function
   441                           
   442                           	psect	bssBANK0
   443  0020                     __pbssBANK0:	
   444  0020                     _table1:	
   445  0020                     	ds	7
   446  0027                     _wd:	
   447  0027                     	ds	2
   448  0029                     read_byte@j:	
   449  0029                     	ds	1
   450  002A                     _wanfen:	
   451  002A                     	ds	1
   452  002B                     _qianfen:	
   453  002B                     	ds	1
   454  002C                     _baifen:	
   455  002C                     	ds	1
   456  002D                     _shifen:	
   457  002D                     	ds	1
   458  002E                     _ge:	
   459  002E                     	ds	1
   460  002F                     _shi:	
   461  002F                     	ds	1
   462  0030                     _TX:	
   463  0030                     	ds	1
   464  0031                     _TZ:	
   465  0031                     	ds	1
   466  0032                     _THV:	
   467  0032                     	ds	1
   468  0033                     _TLV:	
   469  0033                     	ds	1
   470                           
   471                           	psect	clrtext
   472  00A8                     clear_ram0:	
   473                           ;	Called with FSR containing the base address, and
   474                           ;	W with the last address+1
   475                           
   476  00A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   477  00A9                     clrloop0:	
   478  00A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   479  00AA  0A84               	incf	4,f	;increment pointer
   480  00AB  0604               	xorwf	4,w	;XOR with final address
   481  00AC  1903               	btfsc	3,2	;have we reached the end yet?
   482  00AD  3400               	retlw	0	;all done for this memory range, return
   483  00AE  0604               	xorwf	4,w	;XOR again to restore value
   484  00AF  28A9               	goto	clrloop0	;do the next byte
   485                           
   486                           	psect	cstackCOMMON
   487  0070                     __pcstackCOMMON:	
   488  0070                     ?_set_time:	
   489  0070                     ?_ds1302_init:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_init:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ??_init:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_lcd_init:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_init_temp:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ??_init_temp:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_get_temp:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_write_char:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_display_temp:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_get_time:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_write_cmd:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_display_date:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_display_clock:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_delay_lcd:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_delay_lcd:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_delay_screen:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ??_delay_screen:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_delay_temp:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_delay2:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ??_delay2:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_time_write_1:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_time_write_1:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_time_read_1:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_time_read_1:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_delay_time:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ??_delay_time:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_main:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_reset_temp:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_write_byte:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_read_byte:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?___awdiv:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?___awmod:	
   583                           ; 2 bytes @ 0x0
   584                           
   585  0070                     ?___lwmod:	
   586                           ; 2 bytes @ 0x0
   587                           
   588  0070                     delay_temp@y:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0070                     delay_lcd@i:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     delay_screen@i:	
   595                           ; 2 bytes @ 0x0
   596                           
   597  0070                     delay2@i:	
   598                           ; 2 bytes @ 0x0
   599                           
   600  0070                     delay_time@i:	
   601                           ; 2 bytes @ 0x0
   602                           
   603  0070                     ___awdiv@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0070                     ___awmod@divisor:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0070                     ___lwmod@divisor:	
   610                           ; 2 bytes @ 0x0
   611                           
   612                           
   613                           ; 2 bytes @ 0x0
   614  0070                     	ds	1
   615  0071                     ??_delay_temp:	
   616                           
   617                           ; 1 bytes @ 0x1
   618  0071                     	ds	1
   619  0072                     ??_write_char:	
   620  0072                     ??_write_cmd:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0072                     write_char@x:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     write_cmd@x:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     delay_temp@x:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     time_write_1@j:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     time_read_1@j:	
   636                           ; 2 bytes @ 0x2
   637                           
   638  0072                     ___awdiv@dividend:	
   639                           ; 2 bytes @ 0x2
   640                           
   641  0072                     ___awmod@dividend:	
   642                           ; 2 bytes @ 0x2
   643                           
   644  0072                     ___lwmod@dividend:	
   645                           ; 2 bytes @ 0x2
   646                           
   647                           
   648                           ; 2 bytes @ 0x2
   649  0072                     	ds	1
   650  0073                     ??_lcd_init:	
   651  0073                     ??_display_date:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ??_display_clock:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     delay_temp@z:	
   658                           ; 1 bytes @ 0x3
   659                           
   660                           
   661                           ; 1 bytes @ 0x3
   662  0073                     	ds	1
   663  0074                     ??_display_temp:	
   664  0074                     ??_reset_temp:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     ??_write_byte:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     ??_read_byte:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ??___awdiv:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ??___awmod:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ??___lwmod:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     time_write_1@time_tx:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     time_read_1@time_rx:	
   686                           ; 1 bytes @ 0x4
   687                           
   688                           
   689                           ; 1 bytes @ 0x4
   690  0074                     	ds	1
   691  0075                     ??_set_time:	
   692  0075                     ??_ds1302_init:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     ??_get_time:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     reset_temp@presence:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     read_byte@value:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0075                     ___awdiv@counter:	
   705                           ; 1 bytes @ 0x5
   706                           
   707  0075                     ___awmod@counter:	
   708                           ; 1 bytes @ 0x5
   709                           
   710  0075                     ___lwmod@counter:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     set_time@i:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     display_clock@i:	
   717                           ; 2 bytes @ 0x5
   718                           
   719  0075                     display_date@i:	
   720                           ; 2 bytes @ 0x5
   721                           
   722                           
   723                           ; 2 bytes @ 0x5
   724  0075                     	ds	1
   725  0076                     ?___lwdiv:	
   726  0076                     write_byte@temp:	
   727                           ; 2 bytes @ 0x6
   728                           
   729  0076                     read_byte@i:	
   730                           ; 1 bytes @ 0x6
   731                           
   732  0076                     ___awdiv@sign:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ___awmod@sign:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     get_time@i:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0076                     ___lwdiv@divisor:	
   742                           ; 2 bytes @ 0x6
   743                           
   744                           
   745                           ; 2 bytes @ 0x6
   746  0076                     	ds	1
   747  0077                     write_byte@val:	
   748  0077                     ___awdiv@quotient:	
   749                           ; 1 bytes @ 0x7
   750                           
   751                           
   752                           ; 2 bytes @ 0x7
   753  0077                     	ds	1
   754  0078                     write_byte@i:	
   755  0078                     ___lwdiv@dividend:	
   756                           ; 1 bytes @ 0x8
   757                           
   758                           
   759                           ; 2 bytes @ 0x8
   760  0078                     	ds	2
   761  007A                     ??___lwdiv:	
   762                           
   763                           ; 1 bytes @ 0xA
   764  007A                     	ds	1
   765  007B                     ___lwdiv@quotient:	
   766                           
   767                           ; 2 bytes @ 0xB
   768  007B                     	ds	2
   769  007D                     ___lwdiv@counter:	
   770                           
   771                           ; 1 bytes @ 0xD
   772  007D                     	ds	1
   773  007E                     ??_main:	
   774                           
   775                           	psect	cstackBANK0
   776  0034                     __pcstackBANK0:	
   777                           ; 1 bytes @ 0xE
   778                           
   779  0034                     ??_get_temp:	
   780                           
   781                           ; 1 bytes @ 0x0
   782  0034                     	ds	4
   783                           
   784                           	psect	maintext
   785  049F                     __pmaintext:	
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 9 in file "mainLogic.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : B00/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels required when called:    3
   811 ;; This function calls:
   812 ;;		_delay_lcd
   813 ;;		_display_clock
   814 ;;		_display_date
   815 ;;		_display_temp
   816 ;;		_ds1302_init
   817 ;;		_get_temp
   818 ;;		_get_time
   819 ;;		_init
   820 ;;		_init_temp
   821 ;;		_lcd_init
   822 ;;		_set_time
   823 ;;		_write_char
   824 ;;		_write_cmd
   825 ;; This function is called by:
   826 ;;		Startup code after reset
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _main
   832  049F                     _main:	
   833  049F                     l2027:	
   834                           ;incstack = 0
   835                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   836                           
   837                           
   838                           ;mainLogic.c: 10:     TRISB=0X02;
   839  049F  3002               	movlw	2
   840  04A0  1683               	bsf	3,5	;RP0=1, select bank1
   841  04A1  1303               	bcf	3,6	;RP1=0, select bank1
   842  04A2  0086               	movwf	6	;volatile
   843  04A3                     l2029:	
   844                           
   845                           ;mainLogic.c: 11:     set_time();
   846  04A3  120A  118A  21E8  120A  118A  	fcall	_set_time
   847  04A8                     l2031:	
   848                           
   849                           ;mainLogic.c: 12:     ds1302_init();
   850  04A8  120A  118A  20DE  120A  118A  	fcall	_ds1302_init
   851  04AD                     l2033:	
   852                           
   853                           ;mainLogic.c: 16:     init();
   854  04AD  120A  118A  20B0  120A  118A  	fcall	_init
   855  04B2                     l2035:	
   856                           
   857                           ;mainLogic.c: 17:     lcd_init();
   858  04B2  120A  118A  2167  120A  118A  	fcall	_lcd_init
   859  04B7                     l2037:	
   860                           
   861                           ;mainLogic.c: 18:     init_temp();
   862  04B7  120A  118A  20A4  120A  118A  	fcall	_init_temp
   863  04BC                     l2039:	
   864                           
   865                           ;mainLogic.c: 19:     get_temp();
   866  04BC  120A  118A  26C5  120A  118A  	fcall	_get_temp
   867  04C1                     l2041:	
   868                           
   869                           ;mainLogic.c: 20:     write_char('T');
   870  04C1  3054               	movlw	84
   871  04C2  120A  118A  2135  120A  118A  	fcall	_write_char
   872  04C7                     l2043:	
   873                           
   874                           ;mainLogic.c: 21:     write_char('e');
   875  04C7  3065               	movlw	101
   876  04C8  120A  118A  2135  120A  118A  	fcall	_write_char
   877  04CD                     l2045:	
   878                           
   879                           ;mainLogic.c: 22:     write_char('m');
   880  04CD  306D               	movlw	109
   881  04CE  120A  118A  2135  120A  118A  	fcall	_write_char
   882  04D3                     l2047:	
   883                           
   884                           ;mainLogic.c: 23:     write_char('p');
   885  04D3  3070               	movlw	112
   886  04D4  120A  118A  2135  120A  118A  	fcall	_write_char
   887  04D9                     l2049:	
   888                           
   889                           ;mainLogic.c: 24:     write_char(':');
   890  04D9  303A               	movlw	58
   891  04DA  120A  118A  2135  120A  118A  	fcall	_write_char
   892  04DF                     l2051:	
   893                           
   894                           ;mainLogic.c: 26:     display_temp();
   895  04DF  120A  118A  23D2  120A  118A  	fcall	_display_temp
   896  04E4                     l2053:	
   897                           
   898                           ;mainLogic.c: 27:     get_time();
   899  04E4  120A  118A  21BA  120A  118A  	fcall	_get_time
   900                           
   901                           ;mainLogic.c: 28:     write_cmd(0x90);
   902  04E9  3090               	movlw	144
   903  04EA  120A  118A  214E  120A  118A  	fcall	_write_cmd
   904                           
   905                           ;mainLogic.c: 29:     write_char('D');
   906  04EF  3044               	movlw	68
   907  04F0  120A  118A  2135  120A  118A  	fcall	_write_char
   908                           
   909                           ;mainLogic.c: 30:     write_char('a');
   910  04F5  3061               	movlw	97
   911  04F6  120A  118A  2135  120A  118A  	fcall	_write_char
   912                           
   913                           ;mainLogic.c: 31:     write_char('t');
   914  04FB  3074               	movlw	116
   915  04FC  120A  118A  2135  120A  118A  	fcall	_write_char
   916                           
   917                           ;mainLogic.c: 32:     write_char('e');
   918  0501  3065               	movlw	101
   919  0502  120A  118A  2135  120A  118A  	fcall	_write_char
   920                           
   921                           ;mainLogic.c: 33:     write_char(':');
   922  0507  303A               	movlw	58
   923  0508  120A  118A  2135  120A  118A  	fcall	_write_char
   924                           
   925                           ;mainLogic.c: 34:     write_char(' ');
   926  050D  3020               	movlw	32
   927  050E  120A  118A  2135  120A  118A  	fcall	_write_char
   928                           
   929                           ;mainLogic.c: 36:     display_date();
   930  0513  120A  118A  254A  120A  118A  	fcall	_display_date
   931                           
   932                           ;mainLogic.c: 37:     write_cmd(0x88);
   933  0518  3088               	movlw	136
   934  0519  120A  118A  214E  120A  118A  	fcall	_write_cmd
   935                           
   936                           ;mainLogic.c: 38:     write_char('T');
   937  051E  3054               	movlw	84
   938  051F  120A  118A  2135  120A  118A  	fcall	_write_char
   939                           
   940                           ;mainLogic.c: 39:     write_char('i');
   941  0524  3069               	movlw	105
   942  0525  120A  118A  2135  120A  118A  	fcall	_write_char
   943                           
   944                           ;mainLogic.c: 40:     write_char('m');
   945  052A  306D               	movlw	109
   946  052B  120A  118A  2135  120A  118A  	fcall	_write_char
   947                           
   948                           ;mainLogic.c: 41:     write_char('e');
   949  0530  3065               	movlw	101
   950  0531  120A  118A  2135  120A  118A  	fcall	_write_char
   951                           
   952                           ;mainLogic.c: 42:     write_char(':');
   953  0536  303A               	movlw	58
   954  0537  120A  118A  2135  120A  118A  	fcall	_write_char
   955                           
   956                           ;mainLogic.c: 43:     display_clock();
   957  053C  120A  118A  2601  120A  118A  	fcall	_display_clock
   958                           
   959                           ;mainLogic.c: 44:     delay_lcd();
   960  0541  120A  118A  20F3  120A  118A  	fcall	_delay_lcd
   961  0546  2CAD               	goto	l2033
   962  0547  120A  118A  2800   	ljmp	start
   963  054A                     __end_of_main:	
   964                           
   965                           	psect	text1
   966  01E8                     __ptext1:	
   967 ;; *************** function _set_time *****************
   968 ;; Defined at:
   969 ;;		line 15 in file "clock_src.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  i               2    5[COMMON] int 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         2       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         2       0       0       0       0
   987 ;;Total ram usage:        2 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    1
   990 ;; This function calls:
   991 ;;		_time_write_1
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _set_time
   999  01E8                     _set_time:	
  1000  01E8                     l1799:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1003                           
  1004                           
  1005                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  1006  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1007  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1008  01EA  1686               	bsf	6,5	;volatile
  1009  01EB                     l1801:	
  1010                           
  1011                           ;clock_src.c: 19:    time_write_1(0xbe);
  1012  01EB  30BE               	movlw	190
  1013  01EC  120A  118A  218F  120A  118A  	fcall	_time_write_1
  1014  01F1                     l1803:	
  1015                           
  1016                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  1017  01F1  01F5               	clrf	set_time@i
  1018  01F2  01F6               	clrf	set_time@i+1
  1019  01F3                     l1809:	
  1020                           
  1021                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  1022  01F3  0875               	movf	set_time@i,w
  1023  01F4  3E01               	addlw	low ((_table-__stringbase)| (0+32768))
  1024  01F5  0084               	movwf	4
  1025  01F6  120A  118A  2003  120A  118A  	fcall	stringdir
  1026  01FB  120A  118A  218F  120A  118A  	fcall	_time_write_1
  1027  0200                     l1811:	
  1028                           
  1029                           ;clock_src.c: 23:      }
  1030  0200  3001               	movlw	1
  1031  0201  07F5               	addwf	set_time@i,f
  1032  0202  1803               	skipnc
  1033  0203  0AF6               	incf	set_time@i+1,f
  1034  0204  3000               	movlw	0
  1035  0205  07F6               	addwf	set_time@i+1,f
  1036  0206                     l1813:	
  1037  0206  0876               	movf	set_time@i+1,w
  1038  0207  3A80               	xorlw	128
  1039  0208  00FF               	movwf	btemp+1
  1040  0209  3080               	movlw	128
  1041  020A  027F               	subwf	btemp+1,w
  1042  020B  1D03               	skipz
  1043  020C  2A0F               	goto	u1085
  1044  020D  3008               	movlw	8
  1045  020E  0275               	subwf	set_time@i,w
  1046  020F                     u1085:	
  1047  020F  1C03               	skipc
  1048  0210  2A12               	goto	u1081
  1049  0211  2A13               	goto	u1080
  1050  0212                     u1081:	
  1051  0212  29F3               	goto	l1809
  1052  0213                     u1080:	
  1053  0213                     l229:	
  1054                           
  1055                           ;clock_src.c: 24:    RB5=0;
  1056  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0215  1286               	bcf	6,5	;volatile
  1059  0216                     l230:	
  1060  0216  0008               	return
  1061  0217                     __end_of_set_time:	
  1062                           
  1063                           	psect	text2
  1064  0167                     __ptext2:	
  1065 ;; *************** function _lcd_init *****************
  1066 ;; Defined at:
  1067 ;;		line 14 in file "LCD_src.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  i               2    0        int 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    2
  1088 ;; This function calls:
  1089 ;;		_delay_screen
  1090 ;;		_write_cmd
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _lcd_init
  1098  0167                     _lcd_init:	
  1099  0167                     l1821:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1102                           
  1103                           
  1104                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  1105  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1106  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1107  0169  0185               	clrf	5	;volatile
  1108  016A                     l1823:	
  1109                           
  1110                           ;LCD_src.c: 18:  RA0=0;
  1111  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1112  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1113  016C  1005               	bcf	5,0	;volatile
  1114  016D                     l1825:	
  1115                           
  1116                           ;LCD_src.c: 19:  delay_screen();
  1117  016D  120A  118A  2109  120A  118A  	fcall	_delay_screen
  1118  0172                     l1827:	
  1119                           
  1120                           ;LCD_src.c: 20:  RA0=1;
  1121  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0174  1405               	bsf	5,0	;volatile
  1124  0175                     l1829:	
  1125                           
  1126                           ;LCD_src.c: 21:  RA2=1;
  1127  0175  1505               	bsf	5,2	;volatile
  1128  0176                     l1831:	
  1129                           
  1130                           ;LCD_src.c: 22:  write_cmd(0x30);
  1131  0176  3030               	movlw	48
  1132  0177  120A  118A  214E  120A  118A  	fcall	_write_cmd
  1133  017C                     l1833:	
  1134                           
  1135                           ;LCD_src.c: 23:  write_cmd(0x01);
  1136  017C  3001               	movlw	1
  1137  017D  120A  118A  214E  120A  118A  	fcall	_write_cmd
  1138  0182                     l1835:	
  1139                           
  1140                           ;LCD_src.c: 24:  write_cmd(0x06);
  1141  0182  3006               	movlw	6
  1142  0183  120A  118A  214E  120A  118A  	fcall	_write_cmd
  1143  0188                     l1837:	
  1144                           
  1145                           ;LCD_src.c: 25:  write_cmd(0x0c);
  1146  0188  300C               	movlw	12
  1147  0189  120A  118A  214E  120A  118A  	fcall	_write_cmd
  1148  018E                     l96:	
  1149  018E  0008               	return
  1150  018F                     __end_of_lcd_init:	
  1151                           
  1152                           	psect	text3
  1153  014E                     __ptext3:	
  1154 ;; *************** function _write_cmd *****************
  1155 ;; Defined at:
  1156 ;;		line 41 in file "LCD_src.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  x               1    wreg     unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  x               1    2[COMMON] unsigned char 
  1161 ;;  i               2    0        int 
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1171 ;;      Params:         0       0       0       0       0
  1172 ;;      Locals:         1       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0
  1174 ;;      Totals:         1       0       0       0       0
  1175 ;;Total ram usage:        1 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    1
  1178 ;; This function calls:
  1179 ;;		_delay_screen
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;;		_lcd_init
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _write_cmd
  1188  014E                     _write_cmd:	
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1192                           ;write_cmd@x stored from wreg
  1193  014E  00F2               	movwf	write_cmd@x
  1194  014F                     l1493:	
  1195                           
  1196                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  1197  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0151  1285               	bcf	5,5	;volatile
  1200                           
  1201                           ;LCD_src.c: 45:  RA4=0;
  1202  0152  1205               	bcf	5,4	;volatile
  1203                           
  1204                           ;LCD_src.c: 46:  RA3=0;
  1205  0153  1185               	bcf	5,3	;volatile
  1206  0154                     l1495:	
  1207                           
  1208                           ;LCD_src.c: 47: delay_screen();
  1209  0154  120A  118A  2109  120A  118A  	fcall	_delay_screen
  1210  0159                     l1497:	
  1211                           
  1212                           ;LCD_src.c: 48:  RA3=1;
  1213  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1214  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1215  015B  1585               	bsf	5,3	;volatile
  1216  015C                     l1499:	
  1217                           
  1218                           ;LCD_src.c: 49:  PORTD=x;
  1219  015C  0872               	movf	write_cmd@x,w
  1220  015D  0088               	movwf	8	;volatile
  1221  015E                     l1501:	
  1222                           
  1223                           ;LCD_src.c: 50:  delay_screen();
  1224  015E  120A  118A  2109  120A  118A  	fcall	_delay_screen
  1225  0163                     l1503:	
  1226                           
  1227                           ;LCD_src.c: 51:  RA3=0;
  1228  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0165  1185               	bcf	5,3	;volatile
  1231  0166                     l102:	
  1232  0166  0008               	return
  1233  0167                     __end_of_write_cmd:	
  1234                           
  1235                           	psect	text4
  1236  00A4                     __ptext4:	
  1237 ;; *************** function _init_temp *****************
  1238 ;; Defined at:
  1239 ;;		line 5 in file "Thermometer_src.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		status,2
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _init_temp
  1268  00A4                     _init_temp:	
  1269  00A4                     l1237:	
  1270                           ;incstack = 0
  1271                           ; Regs used in _init_temp: [status,2]
  1272                           
  1273                           
  1274                           ;Thermometer_src.c: 7:     TRISC=0X00;
  1275  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1276  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1277  00A6  0187               	clrf	7	;volatile
  1278  00A7                     l153:	
  1279  00A7  0008               	return
  1280  00A8                     __end_of_init_temp:	
  1281                           
  1282                           	psect	text5
  1283  00B0                     __ptext5:	
  1284 ;; *************** function _init *****************
  1285 ;; Defined at:
  1286 ;;		line 5 in file "LCD_src.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _init
  1315  00B0                     _init:	
  1316  00B0                     l1209:	
  1317                           ;incstack = 0
  1318                           ; Regs used in _init: [wreg+status,2]
  1319                           
  1320                           
  1321                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  1322  00B0  3007               	movlw	7
  1323  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1324  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1325  00B3  009F               	movwf	31	;volatile
  1326  00B4                     l1211:	
  1327                           
  1328                           ;LCD_src.c: 8:  TRISA0=1;
  1329  00B4  1405               	bsf	5,0	;volatile
  1330  00B5                     l1213:	
  1331                           
  1332                           ;LCD_src.c: 9:  TRISD=0X00;
  1333  00B5  0188               	clrf	8	;volatile
  1334  00B6                     l1215:	
  1335                           
  1336                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  1337  00B6  0181               	clrf	1	;volatile
  1338  00B7                     l1217:	
  1339                           
  1340                           ;LCD_src.c: 11:  TRISE = 0X00;
  1341  00B7  0189               	clrf	9	;volatile
  1342  00B8                     l93:	
  1343  00B8  0008               	return
  1344  00B9                     __end_of_init:	
  1345                           
  1346                           	psect	text6
  1347  01BA                     __ptext6:	
  1348 ;; *************** function _get_time *****************
  1349 ;; Defined at:
  1350 ;;		line 26 in file "clock_src.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  i               2    6[COMMON] int 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         2       0       0       0       0
  1366 ;;      Temps:          1       0       0       0       0
  1367 ;;      Totals:         3       0       0       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		_time_read_1
  1373 ;;		_time_write_1
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _get_time
  1381  01BA                     _get_time:	
  1382  01BA                     l1913:	
  1383                           ;incstack = 0
  1384                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1385                           
  1386                           
  1387                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  1388  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1389  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1390  01BC  1686               	bsf	6,5	;volatile
  1391  01BD                     l1915:	
  1392                           
  1393                           ;clock_src.c: 30:    time_write_1(0xbf);
  1394  01BD  30BF               	movlw	191
  1395  01BE  120A  118A  218F  120A  118A  	fcall	_time_write_1
  1396  01C3                     l1917:	
  1397                           
  1398                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  1399  01C3  01F6               	clrf	get_time@i
  1400  01C4  01F7               	clrf	get_time@i+1
  1401  01C5                     l1923:	
  1402                           
  1403                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  1404  01C5  120A  118A  2217  120A  118A  	fcall	_time_read_1
  1405  01CA  00F5               	movwf	??_get_time
  1406  01CB  0876               	movf	get_time@i,w
  1407  01CC  3E20               	addlw	(low (_table1| 0))& (0+255)
  1408  01CD  0084               	movwf	4
  1409  01CE  0875               	movf	??_get_time,w
  1410  01CF  1383               	bcf	3,7	;select IRP bank0
  1411  01D0  0080               	movwf	0
  1412  01D1                     l1925:	
  1413                           
  1414                           ;clock_src.c: 34:      }
  1415  01D1  3001               	movlw	1
  1416  01D2  07F6               	addwf	get_time@i,f
  1417  01D3  1803               	skipnc
  1418  01D4  0AF7               	incf	get_time@i+1,f
  1419  01D5  3000               	movlw	0
  1420  01D6  07F7               	addwf	get_time@i+1,f
  1421  01D7                     l1927:	
  1422  01D7  0877               	movf	get_time@i+1,w
  1423  01D8  3A80               	xorlw	128
  1424  01D9  00FF               	movwf	btemp+1
  1425  01DA  3080               	movlw	128
  1426  01DB  027F               	subwf	btemp+1,w
  1427  01DC  1D03               	skipz
  1428  01DD  29E0               	goto	u1175
  1429  01DE  3007               	movlw	7
  1430  01DF  0276               	subwf	get_time@i,w
  1431  01E0                     u1175:	
  1432  01E0  1C03               	skipc
  1433  01E1  29E3               	goto	u1171
  1434  01E2  29E4               	goto	u1170
  1435  01E3                     u1171:	
  1436  01E3  29C5               	goto	l1923
  1437  01E4                     u1170:	
  1438  01E4                     l234:	
  1439                           
  1440                           ;clock_src.c: 35:    RB5=0;
  1441  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1442  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1443  01E6  1286               	bcf	6,5	;volatile
  1444  01E7                     l235:	
  1445  01E7  0008               	return
  1446  01E8                     __end_of_get_time:	
  1447                           
  1448                           	psect	text7
  1449  0217                     __ptext7:	
  1450 ;; *************** function _time_read_1 *****************
  1451 ;; Defined at:
  1452 ;;		line 131 in file "clock_src.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  j               2    2[COMMON] int 
  1457 ;;  time_rx         1    4[COMMON] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, btemp+1
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       0       0       0       0
  1468 ;;      Locals:         3       0       0       0       0
  1469 ;;      Temps:          2       0       0       0       0
  1470 ;;      Totals:         5       0       0       0       0
  1471 ;;Total ram usage:        5 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_get_time
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _time_read_1
  1482  0217                     _time_read_1:	
  1483  0217                     l1641:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  1486                           
  1487                           
  1488                           ;clock_src.c: 133:    unsigned char time_rx=0;
  1489  0217  01F4               	clrf	time_read_1@time_rx
  1490  0218                     l1643:	
  1491                           
  1492                           ;clock_src.c: 134:    int j;;clock_src.c: 135:    TRISB4=1;
  1493  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1495  021A  1606               	bsf	6,4	;volatile
  1496                           
  1497                           ;clock_src.c: 136:    for(j=0;j<8;j++)
  1498  021B  01F2               	clrf	time_read_1@j
  1499  021C  01F3               	clrf	time_read_1@j+1
  1500  021D                     l252:	
  1501                           
  1502                           ;clock_src.c: 137:       {;clock_src.c: 138:         RB0=0;
  1503  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1504  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1505  021F  1006               	bcf	6,0	;volatile
  1506  0220                     l1649:	
  1507                           
  1508                           ;clock_src.c: 139:         time_rx=time_rx>>1;
  1509  0220  0874               	movf	time_read_1@time_rx,w
  1510  0221  00F0               	movwf	??_time_read_1
  1511  0222  1003               	clrc
  1512  0223  0C70               	rrf	??_time_read_1,w
  1513  0224  00F1               	movwf	??_time_read_1+1
  1514  0225  0871               	movf	??_time_read_1+1,w
  1515  0226  00F4               	movwf	time_read_1@time_rx
  1516  0227                     l1651:	
  1517                           
  1518                           ;clock_src.c: 140:         if(RB4)time_rx=time_rx|0x80;
  1519  0227  1E06               	btfss	6,4	;volatile
  1520  0228  2A2A               	goto	u731
  1521  0229  2A2B               	goto	u730
  1522  022A                     u731:	
  1523  022A  2A30               	goto	l1655
  1524  022B                     u730:	
  1525  022B                     l1653:	
  1526  022B  0874               	movf	time_read_1@time_rx,w
  1527  022C  3880               	iorlw	128
  1528  022D  00F0               	movwf	??_time_read_1
  1529  022E  0870               	movf	??_time_read_1,w
  1530  022F  00F4               	movwf	time_read_1@time_rx
  1531  0230                     l1655:	
  1532                           
  1533                           ;clock_src.c: 142:        RB0=1;
  1534  0230  1406               	bsf	6,0	;volatile
  1535  0231                     l1657:	
  1536                           
  1537                           ;clock_src.c: 143:       }
  1538  0231  3001               	movlw	1
  1539  0232  07F2               	addwf	time_read_1@j,f
  1540  0233  1803               	skipnc
  1541  0234  0AF3               	incf	time_read_1@j+1,f
  1542  0235  3000               	movlw	0
  1543  0236  07F3               	addwf	time_read_1@j+1,f
  1544  0237                     l1659:	
  1545  0237  0873               	movf	time_read_1@j+1,w
  1546  0238  3A80               	xorlw	128
  1547  0239  00FF               	movwf	btemp+1
  1548  023A  3080               	movlw	128
  1549  023B  027F               	subwf	btemp+1,w
  1550  023C  1D03               	skipz
  1551  023D  2A40               	goto	u745
  1552  023E  3008               	movlw	8
  1553  023F  0272               	subwf	time_read_1@j,w
  1554  0240                     u745:	
  1555  0240  1C03               	skipc
  1556  0241  2A43               	goto	u741
  1557  0242  2A44               	goto	u740
  1558  0243                     u741:	
  1559  0243  2A1D               	goto	l252
  1560  0244                     u740:	
  1561  0244                     l253:	
  1562                           
  1563                           ;clock_src.c: 144:     TRISB4=0;
  1564  0244  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0245  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0246  1206               	bcf	6,4	;volatile
  1567                           
  1568                           ;clock_src.c: 145:     RB0=0;
  1569  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0249  1006               	bcf	6,0	;volatile
  1572  024A                     l1661:	
  1573                           
  1574                           ;clock_src.c: 146:     return(time_rx);
  1575  024A  0874               	movf	time_read_1@time_rx,w
  1576  024B                     l255:	
  1577  024B  0008               	return
  1578  024C                     __end_of_time_read_1:	
  1579                           
  1580                           	psect	text8
  1581  06C5                     __ptext8:	
  1582 ;; *************** function _get_temp *****************
  1583 ;; Defined at:
  1584 ;;		line 94 in file "Thermometer_src.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  i               2    0        int 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       0       0       0       0
  1599 ;;      Locals:         0       0       0       0       0
  1600 ;;      Temps:          0       4       0       0       0
  1601 ;;      Totals:         0       4       0       0       0
  1602 ;;Total ram usage:        4 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    2
  1605 ;; This function calls:
  1606 ;;		___awdiv
  1607 ;;		___awmod
  1608 ;;		___lwdiv
  1609 ;;		___lwmod
  1610 ;;		_delay2
  1611 ;;		_read_byte
  1612 ;;		_reset_temp
  1613 ;;		_write_byte
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _get_temp
  1621  06C5                     _get_temp:	
  1622  06C5                     l1839:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1625                           
  1626                           
  1627                           ;Thermometer_src.c: 96: int i;;Thermometer_src.c: 97: TRISC0 =1;
  1628  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  1629  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  1630  06C7  1407               	bsf	7,0	;volatile
  1631  06C8                     l1841:	
  1632                           
  1633                           ;Thermometer_src.c: 98: reset_temp();
  1634  06C8  120A  118A  22C0  120A  118A  	fcall	_reset_temp
  1635                           
  1636                           ;Thermometer_src.c: 99: write_byte(0XCC);
  1637  06CD  30CC               	movlw	204
  1638  06CE  120A  118A  22FA  120A  118A  	fcall	_write_byte
  1639  06D3                     l1843:	
  1640                           
  1641                           ;Thermometer_src.c: 100: delay2();
  1642  06D3  120A  118A  211F  120A  118A  	fcall	_delay2
  1643  06D8                     l1845:	
  1644                           
  1645                           ;Thermometer_src.c: 101: write_byte(0X44);
  1646  06D8  3044               	movlw	68
  1647  06D9  120A  118A  22FA  120A  118A  	fcall	_write_byte
  1648  06DE                     l1847:	
  1649                           
  1650                           ;Thermometer_src.c: 103: reset_temp();
  1651  06DE  120A  118A  22C0  120A  118A  	fcall	_reset_temp
  1652  06E3                     l1849:	
  1653                           
  1654                           ;Thermometer_src.c: 104: write_byte(0XCC);
  1655  06E3  30CC               	movlw	204
  1656  06E4  120A  118A  22FA  120A  118A  	fcall	_write_byte
  1657  06E9                     l1851:	
  1658                           
  1659                           ;Thermometer_src.c: 105: write_byte(0XBE);
  1660  06E9  30BE               	movlw	190
  1661  06EA  120A  118A  22FA  120A  118A  	fcall	_write_byte
  1662  06EF                     l1853:	
  1663                           
  1664                           ;Thermometer_src.c: 106: TLV=read_byte();
  1665  06EF  120A  118A  2286  120A  118A  	fcall	_read_byte
  1666  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1667  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1668  06F6  00B4               	movwf	??_get_temp
  1669  06F7  0834               	movf	??_get_temp,w
  1670  06F8  00B3               	movwf	_TLV
  1671  06F9                     l1855:	
  1672                           
  1673                           ;Thermometer_src.c: 107: THV=read_byte();
  1674  06F9  120A  118A  2286  120A  118A  	fcall	_read_byte
  1675  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1676  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0700  00B4               	movwf	??_get_temp
  1678  0701  0834               	movf	??_get_temp,w
  1679  0702  00B2               	movwf	_THV
  1680  0703                     l1857:	
  1681                           
  1682                           ;Thermometer_src.c: 108: TRISC0 =1;
  1683  0703  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0704  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0705  1407               	bsf	7,0	;volatile
  1686  0706                     l1859:	
  1687                           
  1688                           ;Thermometer_src.c: 109: TZ=(TLV>>4)|(THV<<4)&0X3f;
  1689  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0708  0832               	movf	_THV,w
  1692  0709  00B4               	movwf	??_get_temp
  1693  070A  3004               	movlw	4
  1694  070B                     u1095:	
  1695  070B  1003               	clrc
  1696  070C  0DB4               	rlf	??_get_temp,f
  1697  070D  3EFF               	addlw	-1
  1698  070E  1D03               	skipz
  1699  070F  2F0B               	goto	u1095
  1700  0710  303F               	movlw	63
  1701  0711  0534               	andwf	??_get_temp,w
  1702  0712  00B5               	movwf	??_get_temp+1
  1703  0713  0833               	movf	_TLV,w
  1704  0714  00B6               	movwf	??_get_temp+2
  1705  0715  3004               	movlw	4
  1706  0716                     u1105:	
  1707  0716  1003               	clrc
  1708  0717  0CB6               	rrf	??_get_temp+2,f
  1709  0718  3EFF               	addlw	-1
  1710  0719  1D03               	skipz
  1711  071A  2F16               	goto	u1105
  1712  071B  0836               	movf	??_get_temp+2,w
  1713  071C  0435               	iorwf	??_get_temp+1,w
  1714  071D  00B7               	movwf	??_get_temp+3
  1715  071E  0837               	movf	??_get_temp+3,w
  1716  071F  00B1               	movwf	_TZ
  1717  0720                     l1861:	
  1718                           
  1719                           ;Thermometer_src.c: 110: TX=TLV<<4;
  1720  0720  0833               	movf	_TLV,w
  1721  0721  00B4               	movwf	??_get_temp
  1722  0722  3003               	movlw	3
  1723  0723                     u1115:	
  1724  0723  1003               	clrc
  1725  0724  0DB4               	rlf	??_get_temp,f
  1726  0725  3EFF               	addlw	-1
  1727  0726  1D03               	skipz
  1728  0727  2F23               	goto	u1115
  1729  0728  1003               	clrc
  1730  0729  0D34               	rlf	??_get_temp,w
  1731  072A  00B5               	movwf	??_get_temp+1
  1732  072B  0835               	movf	??_get_temp+1,w
  1733  072C  00B0               	movwf	_TX
  1734  072D                     l1865:	
  1735                           
  1736                           ;Thermometer_src.c: 112: ge=TZ%10;
  1737  072D  300A               	movlw	10
  1738  072E  00F0               	movwf	___awmod@divisor
  1739  072F  3000               	movlw	0
  1740  0730  00F1               	movwf	___awmod@divisor+1
  1741  0731  0831               	movf	_TZ,w
  1742  0732  00B4               	movwf	??_get_temp
  1743  0733  01B5               	clrf	??_get_temp+1
  1744  0734  0834               	movf	??_get_temp,w
  1745  0735  00F2               	movwf	___awmod@dividend
  1746  0736  0835               	movf	??_get_temp+1,w
  1747  0737  00F3               	movwf	___awmod@dividend+1
  1748  0738  120A  118A  2379  120A  118A  	fcall	___awmod
  1749  073D  0870               	movf	?___awmod,w
  1750  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1751  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0740  00B6               	movwf	??_get_temp+2
  1753  0741  0836               	movf	??_get_temp+2,w
  1754  0742  00AE               	movwf	_ge
  1755                           
  1756                           ;Thermometer_src.c: 113: shi=TZ/10;
  1757  0743  300A               	movlw	10
  1758  0744  00F0               	movwf	___awdiv@divisor
  1759  0745  3000               	movlw	0
  1760  0746  00F1               	movwf	___awdiv@divisor+1
  1761  0747  0831               	movf	_TZ,w
  1762  0748  00B4               	movwf	??_get_temp
  1763  0749  01B5               	clrf	??_get_temp+1
  1764  074A  0834               	movf	??_get_temp,w
  1765  074B  00F2               	movwf	___awdiv@dividend
  1766  074C  0835               	movf	??_get_temp+1,w
  1767  074D  00F3               	movwf	___awdiv@dividend+1
  1768  074E  120A  118A  2438  120A  118A  	fcall	___awdiv
  1769  0753  0870               	movf	?___awdiv,w
  1770  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0756  00B6               	movwf	??_get_temp+2
  1773  0757  0836               	movf	??_get_temp+2,w
  1774  0758  00AF               	movwf	_shi
  1775  0759                     l1867:	
  1776                           
  1777                           ;Thermometer_src.c: 114: wd=0;
  1778  0759  01A7               	clrf	_wd
  1779  075A  01A8               	clrf	_wd+1
  1780  075B                     l1869:	
  1781                           
  1782                           ;Thermometer_src.c: 115: if (TX & 0x80) wd=wd+5000;
  1783  075B  1FB0               	btfss	_TX,7
  1784  075C  2F5E               	goto	u1121
  1785  075D  2F5F               	goto	u1120
  1786  075E                     u1121:	
  1787  075E  2F67               	goto	l1873
  1788  075F                     u1120:	
  1789  075F                     l1871:	
  1790  075F  0827               	movf	_wd,w
  1791  0760  3E88               	addlw	136
  1792  0761  00A7               	movwf	_wd
  1793  0762  0828               	movf	_wd+1,w
  1794  0763  1803               	skipnc
  1795  0764  3E01               	addlw	1
  1796  0765  3E13               	addlw	19
  1797  0766  00A8               	movwf	_wd+1
  1798  0767                     l1873:	
  1799                           
  1800                           ;Thermometer_src.c: 116: if (TX & 0x40) wd=wd+2500;
  1801  0767  1F30               	btfss	_TX,6
  1802  0768  2F6A               	goto	u1131
  1803  0769  2F6B               	goto	u1130
  1804  076A                     u1131:	
  1805  076A  2F73               	goto	l1877
  1806  076B                     u1130:	
  1807  076B                     l1875:	
  1808  076B  0827               	movf	_wd,w
  1809  076C  3EC4               	addlw	196
  1810  076D  00A7               	movwf	_wd
  1811  076E  0828               	movf	_wd+1,w
  1812  076F  1803               	skipnc
  1813  0770  3E01               	addlw	1
  1814  0771  3E09               	addlw	9
  1815  0772  00A8               	movwf	_wd+1
  1816  0773                     l1877:	
  1817                           
  1818                           ;Thermometer_src.c: 117: if (TX & 0x20) wd=wd+1250;
  1819  0773  1EB0               	btfss	_TX,5
  1820  0774  2F76               	goto	u1141
  1821  0775  2F77               	goto	u1140
  1822  0776                     u1141:	
  1823  0776  2F7F               	goto	l1881
  1824  0777                     u1140:	
  1825  0777                     l1879:	
  1826  0777  0827               	movf	_wd,w
  1827  0778  3EE2               	addlw	226
  1828  0779  00A7               	movwf	_wd
  1829  077A  0828               	movf	_wd+1,w
  1830  077B  1803               	skipnc
  1831  077C  3E01               	addlw	1
  1832  077D  3E04               	addlw	4
  1833  077E  00A8               	movwf	_wd+1
  1834  077F                     l1881:	
  1835                           
  1836                           ;Thermometer_src.c: 118: if (TX & 0x10) wd=wd+625;
  1837  077F  1E30               	btfss	_TX,4
  1838  0780  2F82               	goto	u1151
  1839  0781  2F83               	goto	u1150
  1840  0782                     u1151:	
  1841  0782  2F8B               	goto	l1885
  1842  0783                     u1150:	
  1843  0783                     l1883:	
  1844  0783  0827               	movf	_wd,w
  1845  0784  3E71               	addlw	113
  1846  0785  00A7               	movwf	_wd
  1847  0786  0828               	movf	_wd+1,w
  1848  0787  1803               	skipnc
  1849  0788  3E01               	addlw	1
  1850  0789  3E02               	addlw	2
  1851  078A  00A8               	movwf	_wd+1
  1852  078B                     l1885:	
  1853                           
  1854                           ;Thermometer_src.c: 119: shifen=wd/1000;
  1855  078B  30E8               	movlw	232
  1856  078C  00F6               	movwf	___lwdiv@divisor
  1857  078D  3003               	movlw	3
  1858  078E  00F7               	movwf	___lwdiv@divisor+1
  1859  078F  0828               	movf	_wd+1,w
  1860  0790  00F9               	movwf	___lwdiv@dividend+1
  1861  0791  0827               	movf	_wd,w
  1862  0792  00F8               	movwf	___lwdiv@dividend
  1863  0793  120A  118A  2335  120A  118A  	fcall	___lwdiv
  1864  0798  0876               	movf	?___lwdiv,w
  1865  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1866  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1867  079B  00B4               	movwf	??_get_temp
  1868  079C  0834               	movf	??_get_temp,w
  1869  079D  00AD               	movwf	_shifen
  1870  079E                     l1887:	
  1871                           
  1872                           ;Thermometer_src.c: 120: baifen=(wd%1000)/100;
  1873  079E  3064               	movlw	100
  1874  079F  00F6               	movwf	___lwdiv@divisor
  1875  07A0  3000               	movlw	0
  1876  07A1  00F7               	movwf	___lwdiv@divisor+1
  1877  07A2  0828               	movf	_wd+1,w
  1878  07A3  00F3               	movwf	___lwmod@dividend+1
  1879  07A4  0827               	movf	_wd,w
  1880  07A5  00F2               	movwf	___lwmod@dividend
  1881  07A6  30E8               	movlw	232
  1882  07A7  00F0               	movwf	___lwmod@divisor
  1883  07A8  3003               	movlw	3
  1884  07A9  00F1               	movwf	___lwmod@divisor+1
  1885  07AA  120A  118A  224C  120A  118A  	fcall	___lwmod
  1886  07AF  0871               	movf	?___lwmod+1,w
  1887  07B0  00F9               	movwf	___lwdiv@dividend+1
  1888  07B1  0870               	movf	?___lwmod,w
  1889  07B2  00F8               	movwf	___lwdiv@dividend
  1890  07B3  120A  118A  2335  120A  118A  	fcall	___lwdiv
  1891  07B8  0876               	movf	?___lwdiv,w
  1892  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1893  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1894  07BB  00B4               	movwf	??_get_temp
  1895  07BC  0834               	movf	??_get_temp,w
  1896  07BD  00AC               	movwf	_baifen
  1897  07BE                     l1889:	
  1898                           
  1899                           ;Thermometer_src.c: 121: qianfen=(wd%100)/10;
  1900  07BE  300A               	movlw	10
  1901  07BF  00F6               	movwf	___lwdiv@divisor
  1902  07C0  3000               	movlw	0
  1903  07C1  00F7               	movwf	___lwdiv@divisor+1
  1904  07C2  0828               	movf	_wd+1,w
  1905  07C3  00F3               	movwf	___lwmod@dividend+1
  1906  07C4  0827               	movf	_wd,w
  1907  07C5  00F2               	movwf	___lwmod@dividend
  1908  07C6  3064               	movlw	100
  1909  07C7  00F0               	movwf	___lwmod@divisor
  1910  07C8  3000               	movlw	0
  1911  07C9  00F1               	movwf	___lwmod@divisor+1
  1912  07CA  120A  118A  224C  120A  118A  	fcall	___lwmod
  1913  07CF  0871               	movf	?___lwmod+1,w
  1914  07D0  00F9               	movwf	___lwdiv@dividend+1
  1915  07D1  0870               	movf	?___lwmod,w
  1916  07D2  00F8               	movwf	___lwdiv@dividend
  1917  07D3  120A  118A  2335  120A  118A  	fcall	___lwdiv
  1918  07D8  0876               	movf	?___lwdiv,w
  1919  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1920  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1921  07DB  00B4               	movwf	??_get_temp
  1922  07DC  0834               	movf	??_get_temp,w
  1923  07DD  00AB               	movwf	_qianfen
  1924  07DE                     l1891:	
  1925                           
  1926                           ;Thermometer_src.c: 122: wanfen=wd%10;
  1927  07DE  300A               	movlw	10
  1928  07DF  00F0               	movwf	___lwmod@divisor
  1929  07E0  3000               	movlw	0
  1930  07E1  00F1               	movwf	___lwmod@divisor+1
  1931  07E2  0828               	movf	_wd+1,w
  1932  07E3  00F3               	movwf	___lwmod@dividend+1
  1933  07E4  0827               	movf	_wd,w
  1934  07E5  00F2               	movwf	___lwmod@dividend
  1935  07E6  120A  118A  224C  120A  118A  	fcall	___lwmod
  1936  07EB  0870               	movf	?___lwmod,w
  1937  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1938  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1939  07EE  00B4               	movwf	??_get_temp
  1940  07EF  0834               	movf	??_get_temp,w
  1941  07F0  00AA               	movwf	_wanfen
  1942  07F1                     l1893:	
  1943                           
  1944                           ;Thermometer_src.c: 123: __nop();
  1945  07F1  0000               	nop
  1946  07F2                     l188:	
  1947  07F2  0008               	return
  1948  07F3                     __end_of_get_temp:	
  1949                           
  1950                           	psect	text9
  1951  02FA                     __ptext9:	
  1952 ;; *************** function _write_byte *****************
  1953 ;; Defined at:
  1954 ;;		line 45 in file "Thermometer_src.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  val             1    wreg     unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  val             1    7[COMMON] unsigned char 
  1959 ;;  i               1    8[COMMON] unsigned char 
  1960 ;;  temp            1    6[COMMON] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         3       0       0       0       0
  1972 ;;      Temps:          2       0       0       0       0
  1973 ;;      Totals:         5       0       0       0       0
  1974 ;;Total ram usage:        5 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    1
  1977 ;; This function calls:
  1978 ;;		_delay_temp
  1979 ;; This function is called by:
  1980 ;;		_get_temp
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function _write_byte
  1986  02FA                     _write_byte:	
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  1990                           ;write_byte@val stored from wreg
  1991  02FA  00F7               	movwf	write_byte@val
  1992  02FB                     l1521:	
  1993                           
  1994                           ;Thermometer_src.c: 45: void write_byte(unsigned char val);Thermometer_src.c: 46: {;Ther
      +                          mometer_src.c: 47:  unsigned char i;;Thermometer_src.c: 48:  unsigned char temp;;Thermom
      +                          eter_src.c: 49:  for(i=8;i>0;i--)
  1995  02FB  3008               	movlw	8
  1996  02FC  00F4               	movwf	??_write_byte
  1997  02FD  0874               	movf	??_write_byte,w
  1998  02FE  00F8               	movwf	write_byte@i
  1999  02FF                     l1527:	
  2000                           
  2001                           ;Thermometer_src.c: 50:  {;Thermometer_src.c: 51:    temp=val&0x01;
  2002  02FF  0877               	movf	write_byte@val,w
  2003  0300  3901               	andlw	1
  2004  0301  00F4               	movwf	??_write_byte
  2005  0302  0874               	movf	??_write_byte,w
  2006  0303  00F6               	movwf	write_byte@temp
  2007  0304                     l1529:	
  2008                           
  2009                           ;Thermometer_src.c: 52:    RC0 = 0; TRISC0 = 0;
  2010  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0306  1007               	bcf	7,0	;volatile
  2013  0307                     l1531:	
  2014  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0308  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0309  1007               	bcf	7,0	;volatile
  2017  030A                     l1533:	
  2018                           
  2019                           ;Thermometer_src.c: 53:    __nop();
  2020  030A  0000               	nop
  2021  030B                     l1535:	
  2022                           
  2023                           ;Thermometer_src.c: 54:    __nop();
  2024  030B  0000               	nop
  2025  030C                     l1537:	
  2026                           
  2027                           ;Thermometer_src.c: 55:    __nop();
  2028  030C  0000               	nop
  2029  030D                     l1539:	
  2030                           
  2031                           ;Thermometer_src.c: 56:    __nop();
  2032  030D  0000               	nop
  2033  030E                     l1541:	
  2034                           
  2035                           ;Thermometer_src.c: 57:    __nop();
  2036  030E  0000               	nop
  2037  030F                     l1543:	
  2038                           
  2039                           ;Thermometer_src.c: 58:    if(temp==1) TRISC0 =1;
  2040  030F  0376               	decf	write_byte@temp,w
  2041  0310  1D03               	btfss	3,2
  2042  0311  2B13               	goto	u661
  2043  0312  2B14               	goto	u660
  2044  0313                     u661:	
  2045  0313  2B17               	goto	l1547
  2046  0314                     u660:	
  2047  0314                     l1545:	
  2048  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0316  1407               	bsf	7,0	;volatile
  2051  0317                     l1547:	
  2052                           
  2053                           ;Thermometer_src.c: 59:    delay_temp(2,7);
  2054  0317  3007               	movlw	7
  2055  0318  00F4               	movwf	??_write_byte
  2056  0319  0874               	movf	??_write_byte,w
  2057  031A  00F0               	movwf	delay_temp@y
  2058  031B  3002               	movlw	2
  2059  031C  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  2060  0321                     l1549:	
  2061                           
  2062                           ;Thermometer_src.c: 60:    TRISC0 =1;
  2063  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2065  0323  1407               	bsf	7,0	;volatile
  2066  0324                     l1551:	
  2067                           
  2068                           ;Thermometer_src.c: 61:    __nop();
  2069  0324  0000               	nop
  2070  0325                     l1553:	
  2071                           
  2072                           ;Thermometer_src.c: 62:    __nop();
  2073  0325  0000               	nop
  2074  0326                     l1555:	
  2075                           
  2076                           ;Thermometer_src.c: 63:    val=val>>1;
  2077  0326  0877               	movf	write_byte@val,w
  2078  0327  00F4               	movwf	??_write_byte
  2079  0328  1003               	clrc
  2080  0329  0C74               	rrf	??_write_byte,w
  2081  032A  00F5               	movwf	??_write_byte+1
  2082  032B  0875               	movf	??_write_byte+1,w
  2083  032C  00F7               	movwf	write_byte@val
  2084  032D                     l1557:	
  2085                           
  2086                           ;Thermometer_src.c: 64:   }
  2087  032D  3001               	movlw	1
  2088  032E  02F8               	subwf	write_byte@i,f
  2089  032F                     l1559:	
  2090  032F  0878               	movf	write_byte@i,w
  2091  0330  1D03               	btfss	3,2
  2092  0331  2B33               	goto	u671
  2093  0332  2B34               	goto	u670
  2094  0333                     u671:	
  2095  0333  2AFF               	goto	l1527
  2096  0334                     u670:	
  2097  0334                     l172:	
  2098  0334  0008               	return
  2099  0335                     __end_of_write_byte:	
  2100                           
  2101                           	psect	text10
  2102  02C0                     __ptext10:	
  2103 ;; *************** function _reset_temp *****************
  2104 ;; Defined at:
  2105 ;;		line 30 in file "Thermometer_src.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  presence        1    5[COMMON] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         0       0       0       0       0
  2120 ;;      Locals:         1       0       0       0       0
  2121 ;;      Temps:          1       0       0       0       0
  2122 ;;      Totals:         2       0       0       0       0
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		_delay_temp
  2128 ;; This function is called by:
  2129 ;;		_get_temp
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _reset_temp
  2135  02C0                     _reset_temp:	
  2136  02C0                     l1505:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  2139                           
  2140                           
  2141                           ;Thermometer_src.c: 32:   char presence=1;
  2142  02C0  01F5               	clrf	reset_temp@presence
  2143  02C1  0AF5               	incf	reset_temp@presence,f
  2144                           
  2145                           ;Thermometer_src.c: 33:   while(presence)
  2146  02C2  2AF4               	goto	l1519
  2147  02C3                     l162:	
  2148                           
  2149                           ;Thermometer_src.c: 34:   {;Thermometer_src.c: 35:     RC0 = 0; TRISC0 = 0 ;
  2150  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2151  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2152  02C5  1007               	bcf	7,0	;volatile
  2153  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2154  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2155  02C8  1007               	bcf	7,0	;volatile
  2156  02C9                     l1507:	
  2157                           
  2158                           ;Thermometer_src.c: 36:     delay_temp(2,70);
  2159  02C9  3046               	movlw	70
  2160  02CA  00F4               	movwf	??_reset_temp
  2161  02CB  0874               	movf	??_reset_temp,w
  2162  02CC  00F0               	movwf	delay_temp@y
  2163  02CD  3002               	movlw	2
  2164  02CE  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  2165  02D3                     l1509:	
  2166                           
  2167                           ;Thermometer_src.c: 37:     TRISC0 =1;
  2168  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2169  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2170  02D5  1407               	bsf	7,0	;volatile
  2171                           
  2172                           ;Thermometer_src.c: 38:     delay_temp(2,8);
  2173  02D6  3008               	movlw	8
  2174  02D7  00F4               	movwf	??_reset_temp
  2175  02D8  0874               	movf	??_reset_temp,w
  2176  02D9  00F0               	movwf	delay_temp@y
  2177  02DA  3002               	movlw	2
  2178  02DB  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  2179  02E0                     l1511:	
  2180                           
  2181                           ;Thermometer_src.c: 39:     if(RC0==1) presence=1;
  2182  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2183  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2184  02E2  1C07               	btfss	7,0	;volatile
  2185  02E3  2AE5               	goto	u641
  2186  02E4  2AE6               	goto	u640
  2187  02E5                     u641:	
  2188  02E5  2AE9               	goto	l1515
  2189  02E6                     u640:	
  2190  02E6                     l1513:	
  2191  02E6  01F5               	clrf	reset_temp@presence
  2192  02E7  0AF5               	incf	reset_temp@presence,f
  2193  02E8  2AEA               	goto	l1517
  2194  02E9                     l1515:	
  2195  02E9  01F5               	clrf	reset_temp@presence
  2196  02EA                     l1517:	
  2197                           
  2198                           ;Thermometer_src.c: 41:     delay_temp(2,60);
  2199  02EA  303C               	movlw	60
  2200  02EB  00F4               	movwf	??_reset_temp
  2201  02EC  0874               	movf	??_reset_temp,w
  2202  02ED  00F0               	movwf	delay_temp@y
  2203  02EE  3002               	movlw	2
  2204  02EF  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  2205  02F4                     l1519:	
  2206                           
  2207                           ;Thermometer_src.c: 33:   while(presence)
  2208  02F4  0875               	movf	reset_temp@presence,w
  2209  02F5  1D03               	btfss	3,2
  2210  02F6  2AF8               	goto	u651
  2211  02F7  2AF9               	goto	u650
  2212  02F8                     u651:	
  2213  02F8  2AC3               	goto	l162
  2214  02F9                     u650:	
  2215  02F9                     l166:	
  2216  02F9  0008               	return
  2217  02FA                     __end_of_reset_temp:	
  2218                           
  2219                           	psect	text11
  2220  0286                     __ptext11:	
  2221 ;; *************** function _read_byte *****************
  2222 ;; Defined at:
  2223 ;;		line 67 in file "Thermometer_src.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  i               1    6[COMMON] unsigned char 
  2228 ;;  value           1    5[COMMON] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      unsigned char 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         2       0       0       0       0
  2240 ;;      Temps:          1       0       0       0       0
  2241 ;;      Totals:         3       0       0       0       0
  2242 ;;Total ram usage:        3 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    1
  2245 ;; This function calls:
  2246 ;;		_delay_temp
  2247 ;; This function is called by:
  2248 ;;		_get_temp
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _read_byte
  2254  0286                     _read_byte:	
  2255  0286                     l1561:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  2258                           
  2259                           
  2260                           ;Thermometer_src.c: 69:  unsigned char i;;Thermometer_src.c: 70:  unsigned char value=0;
  2261  0286  01F5               	clrf	read_byte@value
  2262  0287                     l1563:	
  2263                           
  2264                           ;Thermometer_src.c: 71:  static _Bool j;;Thermometer_src.c: 72:  for(i=8;i>0;i--)
  2265  0287  3008               	movlw	8
  2266  0288  00F4               	movwf	??_read_byte
  2267  0289  0874               	movf	??_read_byte,w
  2268  028A  00F6               	movwf	read_byte@i
  2269  028B                     l1569:	
  2270                           
  2271                           ;Thermometer_src.c: 73:  {;Thermometer_src.c: 74:    value>>=1;
  2272  028B  1003               	clrc
  2273  028C  0CF5               	rrf	read_byte@value,f
  2274  028D                     l1571:	
  2275                           
  2276                           ;Thermometer_src.c: 75:    RC0 = 0; TRISC0 = 0;
  2277  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2278  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2279  028F  1007               	bcf	7,0	;volatile
  2280  0290                     l1573:	
  2281  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0292  1007               	bcf	7,0	;volatile
  2284  0293                     l1575:	
  2285                           
  2286                           ;Thermometer_src.c: 76:    __nop();
  2287  0293  0000               	nop
  2288  0294                     l1577:	
  2289                           
  2290                           ;Thermometer_src.c: 77:    __nop();
  2291  0294  0000               	nop
  2292  0295                     l1579:	
  2293                           
  2294                           ;Thermometer_src.c: 78:    __nop();
  2295  0295  0000               	nop
  2296  0296                     l1581:	
  2297                           
  2298                           ;Thermometer_src.c: 79:    __nop();
  2299  0296  0000               	nop
  2300  0297                     l1583:	
  2301                           
  2302                           ;Thermometer_src.c: 80:    __nop();
  2303  0297  0000               	nop
  2304  0298                     l1585:	
  2305                           
  2306                           ;Thermometer_src.c: 81:    __nop();
  2307  0298  0000               	nop
  2308  0299                     l1587:	
  2309                           
  2310                           ;Thermometer_src.c: 82:    TRISC0 =1;
  2311  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2312  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2313  029B  1407               	bsf	7,0	;volatile
  2314  029C                     l1589:	
  2315                           
  2316                           ;Thermometer_src.c: 83:    __nop();
  2317  029C  0000               	nop
  2318  029D                     l1591:	
  2319                           
  2320                           ;Thermometer_src.c: 84:    __nop();
  2321  029D  0000               	nop
  2322  029E                     l1593:	
  2323                           
  2324                           ;Thermometer_src.c: 85:    __nop();
  2325  029E  0000               	nop
  2326  029F                     l1595:	
  2327                           
  2328                           ;Thermometer_src.c: 86:    __nop();
  2329  029F  0000               	nop
  2330  02A0                     l1597:	
  2331                           
  2332                           ;Thermometer_src.c: 87:    __nop();
  2333  02A0  0000               	nop
  2334  02A1                     l1599:	
  2335                           
  2336                           ;Thermometer_src.c: 88:    j=RC0;
  2337  02A1  3000               	movlw	0
  2338  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2339  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2340  02A4  1807               	btfsc	7,0	;volatile
  2341  02A5  3001               	movlw	1
  2342  02A6  00A9               	movwf	read_byte@j
  2343  02A7                     l1601:	
  2344                           
  2345                           ;Thermometer_src.c: 89:    if(j) value|=0x80;
  2346  02A7  0829               	movf	read_byte@j,w
  2347  02A8  1903               	btfsc	3,2
  2348  02A9  2AAB               	goto	u681
  2349  02AA  2AAC               	goto	u680
  2350  02AB                     u681:	
  2351  02AB  2AAD               	goto	l1605
  2352  02AC                     u680:	
  2353  02AC                     l1603:	
  2354  02AC  17F5               	bsf	read_byte@value,7
  2355  02AD                     l1605:	
  2356                           
  2357                           ;Thermometer_src.c: 90:    delay_temp(2,7);
  2358  02AD  3007               	movlw	7
  2359  02AE  00F4               	movwf	??_read_byte
  2360  02AF  0874               	movf	??_read_byte,w
  2361  02B0  00F0               	movwf	delay_temp@y
  2362  02B1  3002               	movlw	2
  2363  02B2  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  2364  02B7                     l1607:	
  2365                           
  2366                           ;Thermometer_src.c: 91:   }
  2367  02B7  3001               	movlw	1
  2368  02B8  02F6               	subwf	read_byte@i,f
  2369  02B9                     l1609:	
  2370  02B9  0876               	movf	read_byte@i,w
  2371  02BA  1D03               	btfss	3,2
  2372  02BB  2ABD               	goto	u691
  2373  02BC  2ABE               	goto	u690
  2374  02BD                     u691:	
  2375  02BD  2A8B               	goto	l1569
  2376  02BE                     u690:	
  2377  02BE                     l1611:	
  2378                           
  2379                           ;Thermometer_src.c: 92:   return(value);
  2380  02BE  0875               	movf	read_byte@value,w
  2381  02BF                     l180:	
  2382  02BF  0008               	return
  2383  02C0                     __end_of_read_byte:	
  2384                           
  2385                           	psect	text12
  2386  011F                     __ptext12:	
  2387 ;; *************** function _delay2 *****************
  2388 ;; Defined at:
  2389 ;;		line 135 in file "Thermometer_src.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  i               2    0[COMMON] int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, btemp+1
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         2       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0
  2406 ;;      Totals:         2       0       0       0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_get_temp
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _delay2
  2418  011F                     _delay2:	
  2419  011F                     l1615:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  2422                           
  2423                           
  2424                           ;Thermometer_src.c: 136:  for (int i = 0; i<50;i++){
  2425  011F  01F0               	clrf	delay2@i
  2426  0120  01F1               	clrf	delay2@i+1
  2427  0121                     l1621:	
  2428                           
  2429                           ;Thermometer_src.c: 137:  }
  2430  0121  3001               	movlw	1
  2431  0122  07F0               	addwf	delay2@i,f
  2432  0123  1803               	skipnc
  2433  0124  0AF1               	incf	delay2@i+1,f
  2434  0125  3000               	movlw	0
  2435  0126  07F1               	addwf	delay2@i+1,f
  2436  0127                     l1623:	
  2437  0127  0871               	movf	delay2@i+1,w
  2438  0128  3A80               	xorlw	128
  2439  0129  00FF               	movwf	btemp+1
  2440  012A  3080               	movlw	128
  2441  012B  027F               	subwf	btemp+1,w
  2442  012C  1D03               	skipz
  2443  012D  2930               	goto	u705
  2444  012E  3032               	movlw	50
  2445  012F  0270               	subwf	delay2@i,w
  2446  0130                     u705:	
  2447  0130  1C03               	skipc
  2448  0131  2933               	goto	u701
  2449  0132  2934               	goto	u700
  2450  0133                     u701:	
  2451  0133  2921               	goto	l1621
  2452  0134                     u700:	
  2453  0134                     l200:	
  2454  0134  0008               	return
  2455  0135                     __end_of_delay2:	
  2456                           
  2457                           	psect	text13
  2458  024C                     __ptext13:	
  2459 ;; *************** function ___lwmod *****************
  2460 ;; Defined at:
  2461 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  divisor         2    0[COMMON] unsigned int 
  2464 ;;  dividend        2    2[COMMON] unsigned int 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  counter         1    5[COMMON] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2    0[COMMON] unsigned int 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         4       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0
  2478 ;;      Temps:          1       0       0       0       0
  2479 ;;      Totals:         6       0       0       0       0
  2480 ;;Total ram usage:        6 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_get_temp
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function ___lwmod
  2491  024C                     ___lwmod:	
  2492  024C                     l1777:	
  2493                           ;incstack = 0
  2494                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2495                           
  2496  024C  0870               	movf	___lwmod@divisor,w
  2497  024D  0471               	iorwf	___lwmod@divisor+1,w
  2498  024E  1903               	btfsc	3,2
  2499  024F  2A51               	goto	u1021
  2500  0250  2A52               	goto	u1020
  2501  0251                     u1021:	
  2502  0251  2A81               	goto	l1795
  2503  0252                     u1020:	
  2504  0252                     l1779:	
  2505  0252  01F5               	clrf	___lwmod@counter
  2506  0253  0AF5               	incf	___lwmod@counter,f
  2507  0254  2A60               	goto	l1785
  2508  0255                     l1781:	
  2509  0255  3001               	movlw	1
  2510  0256                     u1035:	
  2511  0256  1003               	clrc
  2512  0257  0DF0               	rlf	___lwmod@divisor,f
  2513  0258  0DF1               	rlf	___lwmod@divisor+1,f
  2514  0259  3EFF               	addlw	-1
  2515  025A  1D03               	skipz
  2516  025B  2A56               	goto	u1035
  2517  025C                     l1783:	
  2518  025C  3001               	movlw	1
  2519  025D  00F4               	movwf	??___lwmod
  2520  025E  0874               	movf	??___lwmod,w
  2521  025F  07F5               	addwf	___lwmod@counter,f
  2522  0260                     l1785:	
  2523  0260  1FF1               	btfss	___lwmod@divisor+1,7
  2524  0261  2A63               	goto	u1041
  2525  0262  2A64               	goto	u1040
  2526  0263                     u1041:	
  2527  0263  2A55               	goto	l1781
  2528  0264                     u1040:	
  2529  0264                     l1787:	
  2530  0264  0871               	movf	___lwmod@divisor+1,w
  2531  0265  0273               	subwf	___lwmod@dividend+1,w
  2532  0266  1D03               	skipz
  2533  0267  2A6A               	goto	u1055
  2534  0268  0870               	movf	___lwmod@divisor,w
  2535  0269  0272               	subwf	___lwmod@dividend,w
  2536  026A                     u1055:	
  2537  026A  1C03               	skipc
  2538  026B  2A6D               	goto	u1051
  2539  026C  2A6E               	goto	u1050
  2540  026D                     u1051:	
  2541  026D  2A74               	goto	l1791
  2542  026E                     u1050:	
  2543  026E                     l1789:	
  2544  026E  0870               	movf	___lwmod@divisor,w
  2545  026F  02F2               	subwf	___lwmod@dividend,f
  2546  0270  0871               	movf	___lwmod@divisor+1,w
  2547  0271  1C03               	skipc
  2548  0272  03F3               	decf	___lwmod@dividend+1,f
  2549  0273  02F3               	subwf	___lwmod@dividend+1,f
  2550  0274                     l1791:	
  2551  0274  3001               	movlw	1
  2552  0275                     u1065:	
  2553  0275  1003               	clrc
  2554  0276  0CF1               	rrf	___lwmod@divisor+1,f
  2555  0277  0CF0               	rrf	___lwmod@divisor,f
  2556  0278  3EFF               	addlw	-1
  2557  0279  1D03               	skipz
  2558  027A  2A75               	goto	u1065
  2559  027B                     l1793:	
  2560  027B  3001               	movlw	1
  2561  027C  02F5               	subwf	___lwmod@counter,f
  2562  027D  1D03               	btfss	3,2
  2563  027E  2A80               	goto	u1071
  2564  027F  2A81               	goto	u1070
  2565  0280                     u1071:	
  2566  0280  2A64               	goto	l1787
  2567  0281                     u1070:	
  2568  0281                     l1795:	
  2569  0281  0873               	movf	___lwmod@dividend+1,w
  2570  0282  00F1               	movwf	?___lwmod+1
  2571  0283  0872               	movf	___lwmod@dividend,w
  2572  0284  00F0               	movwf	?___lwmod
  2573  0285                     l629:	
  2574  0285  0008               	return
  2575  0286                     __end_of___lwmod:	
  2576                           
  2577                           	psect	text14
  2578  0335                     __ptext14:	
  2579 ;; *************** function ___lwdiv *****************
  2580 ;; Defined at:
  2581 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  divisor         2    6[COMMON] unsigned int 
  2584 ;;  dividend        2    8[COMMON] unsigned int 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  quotient        2   11[COMMON] unsigned int 
  2587 ;;  counter         1   13[COMMON] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  2    6[COMMON] unsigned int 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         4       0       0       0       0
  2598 ;;      Locals:         3       0       0       0       0
  2599 ;;      Temps:          1       0       0       0       0
  2600 ;;      Totals:         8       0       0       0       0
  2601 ;;Total ram usage:        8 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_get_temp
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function ___lwdiv
  2612  0335                     ___lwdiv:	
  2613  0335                     l1751:	
  2614                           ;incstack = 0
  2615                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2616                           
  2617  0335  01FB               	clrf	___lwdiv@quotient
  2618  0336  01FC               	clrf	___lwdiv@quotient+1
  2619  0337                     l1753:	
  2620  0337  0876               	movf	___lwdiv@divisor,w
  2621  0338  0477               	iorwf	___lwdiv@divisor+1,w
  2622  0339  1903               	btfsc	3,2
  2623  033A  2B3C               	goto	u951
  2624  033B  2B3D               	goto	u950
  2625  033C                     u951:	
  2626  033C  2B74               	goto	l1773
  2627  033D                     u950:	
  2628  033D                     l1755:	
  2629  033D  01FD               	clrf	___lwdiv@counter
  2630  033E  0AFD               	incf	___lwdiv@counter,f
  2631  033F  2B4B               	goto	l1761
  2632  0340                     l1757:	
  2633  0340  3001               	movlw	1
  2634  0341                     u965:	
  2635  0341  1003               	clrc
  2636  0342  0DF6               	rlf	___lwdiv@divisor,f
  2637  0343  0DF7               	rlf	___lwdiv@divisor+1,f
  2638  0344  3EFF               	addlw	-1
  2639  0345  1D03               	skipz
  2640  0346  2B41               	goto	u965
  2641  0347                     l1759:	
  2642  0347  3001               	movlw	1
  2643  0348  00FA               	movwf	??___lwdiv
  2644  0349  087A               	movf	??___lwdiv,w
  2645  034A  07FD               	addwf	___lwdiv@counter,f
  2646  034B                     l1761:	
  2647  034B  1FF7               	btfss	___lwdiv@divisor+1,7
  2648  034C  2B4E               	goto	u971
  2649  034D  2B4F               	goto	u970
  2650  034E                     u971:	
  2651  034E  2B40               	goto	l1757
  2652  034F                     u970:	
  2653  034F                     l1763:	
  2654  034F  3001               	movlw	1
  2655  0350                     u985:	
  2656  0350  1003               	clrc
  2657  0351  0DFB               	rlf	___lwdiv@quotient,f
  2658  0352  0DFC               	rlf	___lwdiv@quotient+1,f
  2659  0353  3EFF               	addlw	-1
  2660  0354  1D03               	skipz
  2661  0355  2B50               	goto	u985
  2662  0356  0877               	movf	___lwdiv@divisor+1,w
  2663  0357  0279               	subwf	___lwdiv@dividend+1,w
  2664  0358  1D03               	skipz
  2665  0359  2B5C               	goto	u995
  2666  035A  0876               	movf	___lwdiv@divisor,w
  2667  035B  0278               	subwf	___lwdiv@dividend,w
  2668  035C                     u995:	
  2669  035C  1C03               	skipc
  2670  035D  2B5F               	goto	u991
  2671  035E  2B60               	goto	u990
  2672  035F                     u991:	
  2673  035F  2B67               	goto	l1769
  2674  0360                     u990:	
  2675  0360                     l1765:	
  2676  0360  0876               	movf	___lwdiv@divisor,w
  2677  0361  02F8               	subwf	___lwdiv@dividend,f
  2678  0362  0877               	movf	___lwdiv@divisor+1,w
  2679  0363  1C03               	skipc
  2680  0364  03F9               	decf	___lwdiv@dividend+1,f
  2681  0365  02F9               	subwf	___lwdiv@dividend+1,f
  2682  0366                     l1767:	
  2683  0366  147B               	bsf	___lwdiv@quotient,0
  2684  0367                     l1769:	
  2685  0367  3001               	movlw	1
  2686  0368                     u1005:	
  2687  0368  1003               	clrc
  2688  0369  0CF7               	rrf	___lwdiv@divisor+1,f
  2689  036A  0CF6               	rrf	___lwdiv@divisor,f
  2690  036B  3EFF               	addlw	-1
  2691  036C  1D03               	skipz
  2692  036D  2B68               	goto	u1005
  2693  036E                     l1771:	
  2694  036E  3001               	movlw	1
  2695  036F  02FD               	subwf	___lwdiv@counter,f
  2696  0370  1D03               	btfss	3,2
  2697  0371  2B73               	goto	u1011
  2698  0372  2B74               	goto	u1010
  2699  0373                     u1011:	
  2700  0373  2B4F               	goto	l1763
  2701  0374                     u1010:	
  2702  0374                     l1773:	
  2703  0374  087C               	movf	___lwdiv@quotient+1,w
  2704  0375  00F7               	movwf	?___lwdiv+1
  2705  0376  087B               	movf	___lwdiv@quotient,w
  2706  0377  00F6               	movwf	?___lwdiv
  2707  0378                     l619:	
  2708  0378  0008               	return
  2709  0379                     __end_of___lwdiv:	
  2710                           
  2711                           	psect	text15
  2712  0379                     __ptext15:	
  2713 ;; *************** function ___awmod *****************
  2714 ;; Defined at:
  2715 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  divisor         2    0[COMMON] int 
  2718 ;;  dividend        2    2[COMMON] int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  sign            1    6[COMMON] unsigned char 
  2721 ;;  counter         1    5[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2    0[COMMON] int 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         4       0       0       0       0
  2732 ;;      Locals:         2       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:         7       0       0       0       0
  2735 ;;Total ram usage:        7 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_get_temp
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function ___awmod
  2746  0379                     ___awmod:	
  2747  0379                     l1713:	
  2748                           ;incstack = 0
  2749                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2750                           
  2751  0379  01F6               	clrf	___awmod@sign
  2752  037A                     l1715:	
  2753  037A  1FF3               	btfss	___awmod@dividend+1,7
  2754  037B  2B7D               	goto	u861
  2755  037C  2B7E               	goto	u860
  2756  037D                     u861:	
  2757  037D  2B85               	goto	l1721
  2758  037E                     u860:	
  2759  037E                     l1717:	
  2760  037E  09F2               	comf	___awmod@dividend,f
  2761  037F  09F3               	comf	___awmod@dividend+1,f
  2762  0380  0AF2               	incf	___awmod@dividend,f
  2763  0381  1903               	skipnz
  2764  0382  0AF3               	incf	___awmod@dividend+1,f
  2765  0383                     l1719:	
  2766  0383  01F6               	clrf	___awmod@sign
  2767  0384  0AF6               	incf	___awmod@sign,f
  2768  0385                     l1721:	
  2769  0385  1FF1               	btfss	___awmod@divisor+1,7
  2770  0386  2B88               	goto	u871
  2771  0387  2B89               	goto	u870
  2772  0388                     u871:	
  2773  0388  2B8E               	goto	l1725
  2774  0389                     u870:	
  2775  0389                     l1723:	
  2776  0389  09F0               	comf	___awmod@divisor,f
  2777  038A  09F1               	comf	___awmod@divisor+1,f
  2778  038B  0AF0               	incf	___awmod@divisor,f
  2779  038C  1903               	skipnz
  2780  038D  0AF1               	incf	___awmod@divisor+1,f
  2781  038E                     l1725:	
  2782  038E  0870               	movf	___awmod@divisor,w
  2783  038F  0471               	iorwf	___awmod@divisor+1,w
  2784  0390  1903               	btfsc	3,2
  2785  0391  2B93               	goto	u881
  2786  0392  2B94               	goto	u880
  2787  0393                     u881:	
  2788  0393  2BC3               	goto	l1743
  2789  0394                     u880:	
  2790  0394                     l1727:	
  2791  0394  01F5               	clrf	___awmod@counter
  2792  0395  0AF5               	incf	___awmod@counter,f
  2793  0396  2BA2               	goto	l1733
  2794  0397                     l1729:	
  2795  0397  3001               	movlw	1
  2796  0398                     u895:	
  2797  0398  1003               	clrc
  2798  0399  0DF0               	rlf	___awmod@divisor,f
  2799  039A  0DF1               	rlf	___awmod@divisor+1,f
  2800  039B  3EFF               	addlw	-1
  2801  039C  1D03               	skipz
  2802  039D  2B98               	goto	u895
  2803  039E                     l1731:	
  2804  039E  3001               	movlw	1
  2805  039F  00F4               	movwf	??___awmod
  2806  03A0  0874               	movf	??___awmod,w
  2807  03A1  07F5               	addwf	___awmod@counter,f
  2808  03A2                     l1733:	
  2809  03A2  1FF1               	btfss	___awmod@divisor+1,7
  2810  03A3  2BA5               	goto	u901
  2811  03A4  2BA6               	goto	u900
  2812  03A5                     u901:	
  2813  03A5  2B97               	goto	l1729
  2814  03A6                     u900:	
  2815  03A6                     l1735:	
  2816  03A6  0871               	movf	___awmod@divisor+1,w
  2817  03A7  0273               	subwf	___awmod@dividend+1,w
  2818  03A8  1D03               	skipz
  2819  03A9  2BAC               	goto	u915
  2820  03AA  0870               	movf	___awmod@divisor,w
  2821  03AB  0272               	subwf	___awmod@dividend,w
  2822  03AC                     u915:	
  2823  03AC  1C03               	skipc
  2824  03AD  2BAF               	goto	u911
  2825  03AE  2BB0               	goto	u910
  2826  03AF                     u911:	
  2827  03AF  2BB6               	goto	l1739
  2828  03B0                     u910:	
  2829  03B0                     l1737:	
  2830  03B0  0870               	movf	___awmod@divisor,w
  2831  03B1  02F2               	subwf	___awmod@dividend,f
  2832  03B2  0871               	movf	___awmod@divisor+1,w
  2833  03B3  1C03               	skipc
  2834  03B4  03F3               	decf	___awmod@dividend+1,f
  2835  03B5  02F3               	subwf	___awmod@dividend+1,f
  2836  03B6                     l1739:	
  2837  03B6  3001               	movlw	1
  2838  03B7                     u925:	
  2839  03B7  1003               	clrc
  2840  03B8  0CF1               	rrf	___awmod@divisor+1,f
  2841  03B9  0CF0               	rrf	___awmod@divisor,f
  2842  03BA  3EFF               	addlw	-1
  2843  03BB  1D03               	skipz
  2844  03BC  2BB7               	goto	u925
  2845  03BD                     l1741:	
  2846  03BD  3001               	movlw	1
  2847  03BE  02F5               	subwf	___awmod@counter,f
  2848  03BF  1D03               	btfss	3,2
  2849  03C0  2BC2               	goto	u931
  2850  03C1  2BC3               	goto	u930
  2851  03C2                     u931:	
  2852  03C2  2BA6               	goto	l1735
  2853  03C3                     u930:	
  2854  03C3                     l1743:	
  2855  03C3  0876               	movf	___awmod@sign,w
  2856  03C4  1903               	btfsc	3,2
  2857  03C5  2BC7               	goto	u941
  2858  03C6  2BC8               	goto	u940
  2859  03C7                     u941:	
  2860  03C7  2BCD               	goto	l1747
  2861  03C8                     u940:	
  2862  03C8                     l1745:	
  2863  03C8  09F2               	comf	___awmod@dividend,f
  2864  03C9  09F3               	comf	___awmod@dividend+1,f
  2865  03CA  0AF2               	incf	___awmod@dividend,f
  2866  03CB  1903               	skipnz
  2867  03CC  0AF3               	incf	___awmod@dividend+1,f
  2868  03CD                     l1747:	
  2869  03CD  0873               	movf	___awmod@dividend+1,w
  2870  03CE  00F1               	movwf	?___awmod+1
  2871  03CF  0872               	movf	___awmod@dividend,w
  2872  03D0  00F0               	movwf	?___awmod
  2873  03D1                     l513:	
  2874  03D1  0008               	return
  2875  03D2                     __end_of___awmod:	
  2876                           
  2877                           	psect	text16
  2878  0438                     __ptext16:	
  2879 ;; *************** function ___awdiv *****************
  2880 ;; Defined at:
  2881 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  divisor         2    0[COMMON] int 
  2884 ;;  dividend        2    2[COMMON] int 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  quotient        2    7[COMMON] int 
  2887 ;;  sign            1    6[COMMON] unsigned char 
  2888 ;;  counter         1    5[COMMON] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  2    0[COMMON] int 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         4       0       0       0       0
  2899 ;;      Locals:         4       0       0       0       0
  2900 ;;      Temps:          1       0       0       0       0
  2901 ;;      Totals:         9       0       0       0       0
  2902 ;;Total ram usage:        9 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_get_temp
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function ___awdiv
  2913  0438                     ___awdiv:	
  2914  0438                     l1669:	
  2915                           ;incstack = 0
  2916                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2917                           
  2918  0438  01F6               	clrf	___awdiv@sign
  2919  0439                     l1671:	
  2920  0439  1FF1               	btfss	___awdiv@divisor+1,7
  2921  043A  2C3C               	goto	u761
  2922  043B  2C3D               	goto	u760
  2923  043C                     u761:	
  2924  043C  2C44               	goto	l1677
  2925  043D                     u760:	
  2926  043D                     l1673:	
  2927  043D  09F0               	comf	___awdiv@divisor,f
  2928  043E  09F1               	comf	___awdiv@divisor+1,f
  2929  043F  0AF0               	incf	___awdiv@divisor,f
  2930  0440  1903               	skipnz
  2931  0441  0AF1               	incf	___awdiv@divisor+1,f
  2932  0442                     l1675:	
  2933  0442  01F6               	clrf	___awdiv@sign
  2934  0443  0AF6               	incf	___awdiv@sign,f
  2935  0444                     l1677:	
  2936  0444  1FF3               	btfss	___awdiv@dividend+1,7
  2937  0445  2C47               	goto	u771
  2938  0446  2C48               	goto	u770
  2939  0447                     u771:	
  2940  0447  2C51               	goto	l1683
  2941  0448                     u770:	
  2942  0448                     l1679:	
  2943  0448  09F2               	comf	___awdiv@dividend,f
  2944  0449  09F3               	comf	___awdiv@dividend+1,f
  2945  044A  0AF2               	incf	___awdiv@dividend,f
  2946  044B  1903               	skipnz
  2947  044C  0AF3               	incf	___awdiv@dividend+1,f
  2948  044D                     l1681:	
  2949  044D  3001               	movlw	1
  2950  044E  00F4               	movwf	??___awdiv
  2951  044F  0874               	movf	??___awdiv,w
  2952  0450  06F6               	xorwf	___awdiv@sign,f
  2953  0451                     l1683:	
  2954  0451  01F7               	clrf	___awdiv@quotient
  2955  0452  01F8               	clrf	___awdiv@quotient+1
  2956  0453                     l1685:	
  2957  0453  0870               	movf	___awdiv@divisor,w
  2958  0454  0471               	iorwf	___awdiv@divisor+1,w
  2959  0455  1903               	btfsc	3,2
  2960  0456  2C58               	goto	u781
  2961  0457  2C59               	goto	u780
  2962  0458                     u781:	
  2963  0458  2C90               	goto	l1705
  2964  0459                     u780:	
  2965  0459                     l1687:	
  2966  0459  01F5               	clrf	___awdiv@counter
  2967  045A  0AF5               	incf	___awdiv@counter,f
  2968  045B  2C67               	goto	l1693
  2969  045C                     l1689:	
  2970  045C  3001               	movlw	1
  2971  045D                     u795:	
  2972  045D  1003               	clrc
  2973  045E  0DF0               	rlf	___awdiv@divisor,f
  2974  045F  0DF1               	rlf	___awdiv@divisor+1,f
  2975  0460  3EFF               	addlw	-1
  2976  0461  1D03               	skipz
  2977  0462  2C5D               	goto	u795
  2978  0463                     l1691:	
  2979  0463  3001               	movlw	1
  2980  0464  00F4               	movwf	??___awdiv
  2981  0465  0874               	movf	??___awdiv,w
  2982  0466  07F5               	addwf	___awdiv@counter,f
  2983  0467                     l1693:	
  2984  0467  1FF1               	btfss	___awdiv@divisor+1,7
  2985  0468  2C6A               	goto	u801
  2986  0469  2C6B               	goto	u800
  2987  046A                     u801:	
  2988  046A  2C5C               	goto	l1689
  2989  046B                     u800:	
  2990  046B                     l1695:	
  2991  046B  3001               	movlw	1
  2992  046C                     u815:	
  2993  046C  1003               	clrc
  2994  046D  0DF7               	rlf	___awdiv@quotient,f
  2995  046E  0DF8               	rlf	___awdiv@quotient+1,f
  2996  046F  3EFF               	addlw	-1
  2997  0470  1D03               	skipz
  2998  0471  2C6C               	goto	u815
  2999  0472  0871               	movf	___awdiv@divisor+1,w
  3000  0473  0273               	subwf	___awdiv@dividend+1,w
  3001  0474  1D03               	skipz
  3002  0475  2C78               	goto	u825
  3003  0476  0870               	movf	___awdiv@divisor,w
  3004  0477  0272               	subwf	___awdiv@dividend,w
  3005  0478                     u825:	
  3006  0478  1C03               	skipc
  3007  0479  2C7B               	goto	u821
  3008  047A  2C7C               	goto	u820
  3009  047B                     u821:	
  3010  047B  2C83               	goto	l1701
  3011  047C                     u820:	
  3012  047C                     l1697:	
  3013  047C  0870               	movf	___awdiv@divisor,w
  3014  047D  02F2               	subwf	___awdiv@dividend,f
  3015  047E  0871               	movf	___awdiv@divisor+1,w
  3016  047F  1C03               	skipc
  3017  0480  03F3               	decf	___awdiv@dividend+1,f
  3018  0481  02F3               	subwf	___awdiv@dividend+1,f
  3019  0482                     l1699:	
  3020  0482  1477               	bsf	___awdiv@quotient,0
  3021  0483                     l1701:	
  3022  0483  3001               	movlw	1
  3023  0484                     u835:	
  3024  0484  1003               	clrc
  3025  0485  0CF1               	rrf	___awdiv@divisor+1,f
  3026  0486  0CF0               	rrf	___awdiv@divisor,f
  3027  0487  3EFF               	addlw	-1
  3028  0488  1D03               	skipz
  3029  0489  2C84               	goto	u835
  3030  048A                     l1703:	
  3031  048A  3001               	movlw	1
  3032  048B  02F5               	subwf	___awdiv@counter,f
  3033  048C  1D03               	btfss	3,2
  3034  048D  2C8F               	goto	u841
  3035  048E  2C90               	goto	u840
  3036  048F                     u841:	
  3037  048F  2C6B               	goto	l1695
  3038  0490                     u840:	
  3039  0490                     l1705:	
  3040  0490  0876               	movf	___awdiv@sign,w
  3041  0491  1903               	btfsc	3,2
  3042  0492  2C94               	goto	u851
  3043  0493  2C95               	goto	u850
  3044  0494                     u851:	
  3045  0494  2C9A               	goto	l1709
  3046  0495                     u850:	
  3047  0495                     l1707:	
  3048  0495  09F7               	comf	___awdiv@quotient,f
  3049  0496  09F8               	comf	___awdiv@quotient+1,f
  3050  0497  0AF7               	incf	___awdiv@quotient,f
  3051  0498  1903               	skipnz
  3052  0499  0AF8               	incf	___awdiv@quotient+1,f
  3053  049A                     l1709:	
  3054  049A  0878               	movf	___awdiv@quotient+1,w
  3055  049B  00F1               	movwf	?___awdiv+1
  3056  049C  0877               	movf	___awdiv@quotient,w
  3057  049D  00F0               	movwf	?___awdiv
  3058  049E                     l500:	
  3059  049E  0008               	return
  3060  049F                     __end_of___awdiv:	
  3061                           
  3062                           	psect	text17
  3063  00DE                     __ptext17:	
  3064 ;; *************** function _ds1302_init *****************
  3065 ;; Defined at:
  3066 ;;		line 6 in file "clock_src.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       0       0       0       0
  3081 ;;      Locals:         0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0
  3083 ;;      Totals:         0       0       0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		_time_write_1
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _ds1302_init
  3096  00DE                     _ds1302_init:	
  3097  00DE                     l1815:	
  3098                           ;incstack = 0
  3099                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3100                           
  3101                           
  3102                           ;clock_src.c: 8:    RB0=0;
  3103  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  3104  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  3105  00E0  1006               	bcf	6,0	;volatile
  3106                           
  3107                           ;clock_src.c: 9:    RB5 =0;
  3108  00E1  1286               	bcf	6,5	;volatile
  3109                           
  3110                           ;clock_src.c: 10:    RB5=1;
  3111  00E2  1686               	bsf	6,5	;volatile
  3112  00E3                     l1817:	
  3113                           
  3114                           ;clock_src.c: 11:    time_write_1(0x8e);
  3115  00E3  308E               	movlw	142
  3116  00E4  120A  118A  218F  120A  118A  	fcall	_time_write_1
  3117                           
  3118                           ;clock_src.c: 12:    time_write_1(0);
  3119  00E9  3000               	movlw	0
  3120  00EA  120A  118A  218F  120A  118A  	fcall	_time_write_1
  3121  00EF                     l1819:	
  3122                           
  3123                           ;clock_src.c: 13:    RB5=0;
  3124  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3125  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3126  00F1  1286               	bcf	6,5	;volatile
  3127  00F2                     l225:	
  3128  00F2  0008               	return
  3129  00F3                     __end_of_ds1302_init:	
  3130                           
  3131                           	psect	text18
  3132  018F                     __ptext18:	
  3133 ;; *************** function _time_write_1 *****************
  3134 ;; Defined at:
  3135 ;;		line 115 in file "clock_src.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  time_tx         1    wreg     unsigned char 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  time_tx         1    4[COMMON] unsigned char 
  3140 ;;  j               2    2[COMMON] int 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0, btemp+1
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       0       0       0       0
  3151 ;;      Locals:         3       0       0       0       0
  3152 ;;      Temps:          2       0       0       0       0
  3153 ;;      Totals:         5       0       0       0       0
  3154 ;;Total ram usage:        5 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_ds1302_init
  3160 ;;		_set_time
  3161 ;;		_get_time
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _time_write_1
  3167  018F                     _time_write_1:	
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  3171                           ;time_write_1@time_tx stored from wreg
  3172  018F  00F4               	movwf	time_write_1@time_tx
  3173  0190                     l1625:	
  3174                           
  3175                           ;clock_src.c: 115: void time_write_1(unsigned char time_tx);clock_src.c: 116: {;clock_sr
      +                          c.c: 117:     int j;;clock_src.c: 118:     for(j=0;j<8;j++)
  3176  0190  01F2               	clrf	time_write_1@j
  3177  0191  01F3               	clrf	time_write_1@j+1
  3178  0192                     l246:	
  3179                           
  3180                           ;clock_src.c: 119:    {;clock_src.c: 120:         RB4=0;
  3181  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0194  1206               	bcf	6,4	;volatile
  3184                           
  3185                           ;clock_src.c: 121:         RB0=0;
  3186  0195  1006               	bcf	6,0	;volatile
  3187                           
  3188                           ;clock_src.c: 122:         if(time_tx&0x01)
  3189  0196  1C74               	btfss	time_write_1@time_tx,0
  3190  0197  2999               	goto	u711
  3191  0198  299A               	goto	u710
  3192  0199                     u711:	
  3193  0199  299B               	goto	l1633
  3194  019A                     u710:	
  3195  019A                     l1631:	
  3196                           
  3197                           ;clock_src.c: 123:           {;clock_src.c: 124:             RB4=1;
  3198  019A  1606               	bsf	6,4	;volatile
  3199  019B                     l1633:	
  3200                           
  3201                           ;clock_src.c: 126:         time_tx=time_tx>>1;
  3202  019B  0874               	movf	time_write_1@time_tx,w
  3203  019C  00F0               	movwf	??_time_write_1
  3204  019D  1003               	clrc
  3205  019E  0C70               	rrf	??_time_write_1,w
  3206  019F  00F1               	movwf	??_time_write_1+1
  3207  01A0  0871               	movf	??_time_write_1+1,w
  3208  01A1  00F4               	movwf	time_write_1@time_tx
  3209  01A2                     l1635:	
  3210                           
  3211                           ;clock_src.c: 127:         RB0=1;
  3212  01A2  1406               	bsf	6,0	;volatile
  3213  01A3                     l1637:	
  3214                           
  3215                           ;clock_src.c: 128:     }
  3216  01A3  3001               	movlw	1
  3217  01A4  07F2               	addwf	time_write_1@j,f
  3218  01A5  1803               	skipnc
  3219  01A6  0AF3               	incf	time_write_1@j+1,f
  3220  01A7  3000               	movlw	0
  3221  01A8  07F3               	addwf	time_write_1@j+1,f
  3222  01A9                     l1639:	
  3223  01A9  0873               	movf	time_write_1@j+1,w
  3224  01AA  3A80               	xorlw	128
  3225  01AB  00FF               	movwf	btemp+1
  3226  01AC  3080               	movlw	128
  3227  01AD  027F               	subwf	btemp+1,w
  3228  01AE  1D03               	skipz
  3229  01AF  29B2               	goto	u725
  3230  01B0  3008               	movlw	8
  3231  01B1  0272               	subwf	time_write_1@j,w
  3232  01B2                     u725:	
  3233  01B2  1C03               	skipc
  3234  01B3  29B5               	goto	u721
  3235  01B4  29B6               	goto	u720
  3236  01B5                     u721:	
  3237  01B5  2992               	goto	l246
  3238  01B6                     u720:	
  3239  01B6                     l247:	
  3240                           
  3241                           ;clock_src.c: 129:       RB0=0;
  3242  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3243  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  3244  01B8  1006               	bcf	6,0	;volatile
  3245  01B9                     l249:	
  3246  01B9  0008               	return
  3247  01BA                     __end_of_time_write_1:	
  3248                           
  3249                           	psect	text19
  3250  03D2                     __ptext19:	
  3251 ;; *************** function _display_temp *****************
  3252 ;; Defined at:
  3253 ;;		line 10 in file "Thermometer_src.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          2       0       0       0       0
  3270 ;;      Totals:         2       0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		_delay_temp
  3276 ;;		_write_char
  3277 ;; This function is called by:
  3278 ;;		_main
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           
  3283                           ;psect for function _display_temp
  3284  03D2                     _display_temp:	
  3285  03D2                     l1895:	
  3286                           ;incstack = 0
  3287                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3288                           
  3289                           
  3290                           ;Thermometer_src.c: 12:  write_char(shi + '0');
  3291  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3292  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3293  03D4  082F               	movf	_shi,w
  3294  03D5  3E30               	addlw	48
  3295  03D6  120A  118A  2135  120A  118A  	fcall	_write_char
  3296  03DB                     l1897:	
  3297                           
  3298                           ;Thermometer_src.c: 13:  delay_temp(10,70);
  3299  03DB  3046               	movlw	70
  3300  03DC  00F4               	movwf	??_display_temp
  3301  03DD  0874               	movf	??_display_temp,w
  3302  03DE  00F0               	movwf	delay_temp@y
  3303  03DF  300A               	movlw	10
  3304  03E0  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  3305  03E5                     l1899:	
  3306                           
  3307                           ;Thermometer_src.c: 14:  write_char(ge + '0');
  3308  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3309  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3310  03E7  082E               	movf	_ge,w
  3311  03E8  3E30               	addlw	48
  3312  03E9  120A  118A  2135  120A  118A  	fcall	_write_char
  3313  03EE                     l1901:	
  3314                           
  3315                           ;Thermometer_src.c: 15:  write_char('.');
  3316  03EE  302E               	movlw	46
  3317  03EF  120A  118A  2135  120A  118A  	fcall	_write_char
  3318  03F4                     l1903:	
  3319                           
  3320                           ;Thermometer_src.c: 16:  delay_temp(10,70);
  3321  03F4  3046               	movlw	70
  3322  03F5  00F4               	movwf	??_display_temp
  3323  03F6  0874               	movf	??_display_temp,w
  3324  03F7  00F0               	movwf	delay_temp@y
  3325  03F8  300A               	movlw	10
  3326  03F9  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  3327                           
  3328                           ;Thermometer_src.c: 17:  write_char(shifen + '0');
  3329  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3330  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3331  0400  082D               	movf	_shifen,w
  3332  0401  3E30               	addlw	48
  3333  0402  120A  118A  2135  120A  118A  	fcall	_write_char
  3334  0407                     l1905:	
  3335                           
  3336                           ;Thermometer_src.c: 18:  delay_temp(10,70);
  3337  0407  3046               	movlw	70
  3338  0408  00F4               	movwf	??_display_temp
  3339  0409  0874               	movf	??_display_temp,w
  3340  040A  00F0               	movwf	delay_temp@y
  3341  040B  300A               	movlw	10
  3342  040C  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  3343  0411                     l1907:	
  3344                           
  3345                           ;Thermometer_src.c: 19:  write_char(baifen + '0');
  3346  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0413  082C               	movf	_baifen,w
  3349  0414  3E30               	addlw	48
  3350  0415  120A  118A  2135  120A  118A  	fcall	_write_char
  3351                           
  3352                           ;Thermometer_src.c: 21:  delay_temp(10,70);
  3353  041A  3046               	movlw	70
  3354  041B  00F4               	movwf	??_display_temp
  3355  041C  0874               	movf	??_display_temp,w
  3356  041D  00F0               	movwf	delay_temp@y
  3357  041E  300A               	movlw	10
  3358  041F  120A  118A  20B9  120A  118A  	fcall	_delay_temp
  3359  0424                     l1909:	
  3360                           
  3361                           ;Thermometer_src.c: 23:  if(shi + '0' == '3'){
  3362  0424  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0425  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0426  082F               	movf	_shi,w
  3365  0427  3E30               	addlw	48
  3366  0428  00F4               	movwf	??_display_temp
  3367  0429  3000               	movlw	0
  3368  042A  1803               	skipnc
  3369  042B  3001               	movlw	1
  3370  042C  00F5               	movwf	??_display_temp+1
  3371  042D  3033               	movlw	51
  3372  042E  0674               	xorwf	??_display_temp,w
  3373  042F  0475               	iorwf	??_display_temp+1,w
  3374  0430  1D03               	btfss	3,2
  3375  0431  2C33               	goto	u1161
  3376  0432  2C34               	goto	u1160
  3377  0433                     u1161:	
  3378  0433  2C36               	goto	l156
  3379  0434                     u1160:	
  3380  0434                     l1911:	
  3381                           
  3382                           ;Thermometer_src.c: 24:      RE1 = 1;
  3383  0434  1489               	bsf	9,1	;volatile
  3384                           
  3385                           ;Thermometer_src.c: 25:      }
  3386  0435  2C37               	goto	l158
  3387  0436                     l156:	
  3388                           ;Thermometer_src.c: 26:      else{
  3389                           
  3390                           
  3391                           ;Thermometer_src.c: 27:       RE1 = 0;
  3392  0436  1089               	bcf	9,1	;volatile
  3393  0437                     l158:	
  3394  0437  0008               	return
  3395  0438                     __end_of_display_temp:	
  3396                           
  3397                           	psect	text20
  3398  00B9                     __ptext20:	
  3399 ;; *************** function _delay_temp *****************
  3400 ;; Defined at:
  3401 ;;		line 126 in file "Thermometer_src.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  x               1    wreg     unsigned char 
  3404 ;;  y               1    0[COMMON] unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  x               1    2[COMMON] unsigned char 
  3407 ;;  z               1    3[COMMON] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         1       0       0       0       0
  3418 ;;      Locals:         2       0       0       0       0
  3419 ;;      Temps:          1       0       0       0       0
  3420 ;;      Totals:         4       0       0       0       0
  3421 ;;Total ram usage:        4 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_display_temp
  3427 ;;		_reset_temp
  3428 ;;		_write_byte
  3429 ;;		_read_byte
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _delay_temp
  3435  00B9                     _delay_temp:	
  3436                           
  3437                           ;incstack = 0
  3438                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  3439                           ;delay_temp@x stored from wreg
  3440  00B9  00F2               	movwf	delay_temp@x
  3441  00BA                     l191:	
  3442                           ;Thermometer_src.c: 126: void delay_temp(char x, char y);Thermometer_src.c: 127: {;Therm
      +                          ometer_src.c: 128:  char z;;Thermometer_src.c: 129:  do{
  3443                           
  3444  00BA                     l1475:	
  3445                           
  3446                           ;Thermometer_src.c: 130:  z=y;
  3447  00BA  0870               	movf	delay_temp@y,w
  3448  00BB  00F1               	movwf	??_delay_temp
  3449  00BC  0871               	movf	??_delay_temp,w
  3450  00BD  00F3               	movwf	delay_temp@z
  3451  00BE                     l1477:	
  3452  00BE  3001               	movlw	1
  3453  00BF  02F3               	subwf	delay_temp@z,f
  3454  00C0  1D03               	btfss	3,2
  3455  00C1  28C3               	goto	u621
  3456  00C2  28C4               	goto	u620
  3457  00C3                     u621:	
  3458  00C3  28BE               	goto	l1477
  3459  00C4                     u620:	
  3460  00C4                     l1479:	
  3461                           
  3462                           ;Thermometer_src.c: 132:  }while(--x);
  3463  00C4  3001               	movlw	1
  3464  00C5  02F2               	subwf	delay_temp@x,f
  3465  00C6  1D03               	btfss	3,2
  3466  00C7  28C9               	goto	u631
  3467  00C8  28CA               	goto	u630
  3468  00C9                     u631:	
  3469  00C9  28BA               	goto	l191
  3470  00CA                     u630:	
  3471  00CA                     l195:	
  3472  00CA  0008               	return
  3473  00CB                     __end_of_delay_temp:	
  3474                           
  3475                           	psect	text21
  3476  054A                     __ptext21:	
  3477 ;; *************** function _display_date *****************
  3478 ;; Defined at:
  3479 ;;		line 79 in file "clock_src.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  i               2    5[COMMON] int 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       0       0       0       0
  3494 ;;      Locals:         2       0       0       0       0
  3495 ;;      Temps:          2       0       0       0       0
  3496 ;;      Totals:         4       0       0       0       0
  3497 ;;Total ram usage:        4 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    2
  3500 ;; This function calls:
  3501 ;;		_delay_time
  3502 ;;		_write_char
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _display_date
  3510  054A                     _display_date:	
  3511  054A                     l1929:	
  3512                           ;incstack = 0
  3513                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3514                           
  3515                           
  3516                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  3517  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3518  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3519  054C  1886               	btfsc	6,1	;volatile
  3520  054D  2D4F               	goto	u1181
  3521  054E  2D50               	goto	u1180
  3522  054F                     u1181:	
  3523  054F  2D58               	goto	l1933
  3524  0550                     u1180:	
  3525  0550                     l1931:	
  3526                           
  3527                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  3528  0550  0823               	movf	_table1+3,w
  3529  0551  00F3               	movwf	??_display_date
  3530  0552  0873               	movf	??_display_date,w
  3531  0553  00A0               	movwf	_table1
  3532                           
  3533                           ;clock_src.c: 85:           table1[1]=table1[4];
  3534  0554  0824               	movf	_table1+4,w
  3535  0555  00F3               	movwf	??_display_date
  3536  0556  0873               	movf	??_display_date,w
  3537  0557  00A1               	movwf	_table1+1
  3538  0558                     l1933:	
  3539                           
  3540                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  3541  0558  0823               	movf	_table1+3,w
  3542  0559  39F0               	andlw	240
  3543  055A  00F3               	movwf	??_display_date
  3544  055B  01F4               	clrf	??_display_date+1
  3545  055C  0873               	movf	??_display_date,w
  3546  055D  00F5               	movwf	display_date@i
  3547  055E  0874               	movf	??_display_date+1,w
  3548  055F  00F6               	movwf	display_date@i+1
  3549  0560                     l1935:	
  3550                           
  3551                           ;clock_src.c: 88:      i=i>>4;
  3552  0560  0E75               	swapf	display_date@i,w
  3553  0561  390F               	andlw	15
  3554  0562  00F5               	movwf	display_date@i
  3555  0563  0E76               	swapf	display_date@i+1,w
  3556  0564  39F0               	andlw	240
  3557  0565  04F5               	iorwf	display_date@i,f
  3558  0566  0E76               	swapf	display_date@i+1,w
  3559  0567  390F               	andlw	15
  3560  0568  00F6               	movwf	display_date@i+1
  3561  0569  30F0               	movlw	240
  3562  056A  1DF6               	btfss	display_date@i+1,3
  3563  056B  3000               	movlw	0
  3564  056C  04F6               	iorwf	display_date@i+1,f
  3565  056D                     l1937:	
  3566                           
  3567                           ;clock_src.c: 89:      write_char(i + '0');
  3568  056D  0875               	movf	display_date@i,w
  3569  056E  3E30               	addlw	48
  3570  056F  120A  118A  2135  120A  118A  	fcall	_write_char
  3571  0574                     l1939:	
  3572                           
  3573                           ;clock_src.c: 90:      delay_time();
  3574  0574  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3575  0579                     l1941:	
  3576                           
  3577                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  3578  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3579  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3580  057B  0823               	movf	_table1+3,w
  3581  057C  390F               	andlw	15
  3582  057D  00F3               	movwf	??_display_date
  3583  057E  01F4               	clrf	??_display_date+1
  3584  057F  0873               	movf	??_display_date,w
  3585  0580  00F5               	movwf	display_date@i
  3586  0581  0874               	movf	??_display_date+1,w
  3587  0582  00F6               	movwf	display_date@i+1
  3588  0583                     l1943:	
  3589                           
  3590                           ;clock_src.c: 92:      write_char(i + '0');
  3591  0583  0875               	movf	display_date@i,w
  3592  0584  3E30               	addlw	48
  3593  0585  120A  118A  2135  120A  118A  	fcall	_write_char
  3594  058A                     l1945:	
  3595                           
  3596                           ;clock_src.c: 93:      write_char('/');
  3597  058A  302F               	movlw	47
  3598  058B  120A  118A  2135  120A  118A  	fcall	_write_char
  3599  0590                     l1947:	
  3600                           
  3601                           ;clock_src.c: 94:      delay_time();
  3602  0590  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3603  0595                     l1949:	
  3604                           
  3605                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  3606  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0596  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0597  0824               	movf	_table1+4,w
  3609  0598  39F0               	andlw	240
  3610  0599  00F3               	movwf	??_display_date
  3611  059A  01F4               	clrf	??_display_date+1
  3612  059B  0873               	movf	??_display_date,w
  3613  059C  00F5               	movwf	display_date@i
  3614  059D  0874               	movf	??_display_date+1,w
  3615  059E  00F6               	movwf	display_date@i+1
  3616  059F                     l1951:	
  3617                           
  3618                           ;clock_src.c: 98:      i=i>>4;
  3619  059F  0E75               	swapf	display_date@i,w
  3620  05A0  390F               	andlw	15
  3621  05A1  00F5               	movwf	display_date@i
  3622  05A2  0E76               	swapf	display_date@i+1,w
  3623  05A3  39F0               	andlw	240
  3624  05A4  04F5               	iorwf	display_date@i,f
  3625  05A5  0E76               	swapf	display_date@i+1,w
  3626  05A6  390F               	andlw	15
  3627  05A7  00F6               	movwf	display_date@i+1
  3628  05A8  30F0               	movlw	240
  3629  05A9  1DF6               	btfss	display_date@i+1,3
  3630  05AA  3000               	movlw	0
  3631  05AB  04F6               	iorwf	display_date@i+1,f
  3632  05AC                     l1953:	
  3633                           
  3634                           ;clock_src.c: 99:      write_char(i + '0');
  3635  05AC  0875               	movf	display_date@i,w
  3636  05AD  3E30               	addlw	48
  3637  05AE  120A  118A  2135  120A  118A  	fcall	_write_char
  3638  05B3                     l1955:	
  3639                           
  3640                           ;clock_src.c: 100:      delay_time();
  3641  05B3  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3642  05B8                     l1957:	
  3643                           
  3644                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  3645  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3646  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3647  05BA  0824               	movf	_table1+4,w
  3648  05BB  390F               	andlw	15
  3649  05BC  00F3               	movwf	??_display_date
  3650  05BD  01F4               	clrf	??_display_date+1
  3651  05BE  0873               	movf	??_display_date,w
  3652  05BF  00F5               	movwf	display_date@i
  3653  05C0  0874               	movf	??_display_date+1,w
  3654  05C1  00F6               	movwf	display_date@i+1
  3655  05C2                     l1959:	
  3656                           
  3657                           ;clock_src.c: 102:      write_char(i + '0');
  3658  05C2  0875               	movf	display_date@i,w
  3659  05C3  3E30               	addlw	48
  3660  05C4  120A  118A  2135  120A  118A  	fcall	_write_char
  3661  05C9                     l1961:	
  3662                           
  3663                           ;clock_src.c: 103:      write_char('/');
  3664  05C9  302F               	movlw	47
  3665  05CA  120A  118A  2135  120A  118A  	fcall	_write_char
  3666  05CF                     l1963:	
  3667                           
  3668                           ;clock_src.c: 104:      delay_time();
  3669  05CF  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3670  05D4                     l1965:	
  3671                           
  3672                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  3673  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3674  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3675  05D6  0826               	movf	_table1+6,w
  3676  05D7  39F0               	andlw	240
  3677  05D8  00F3               	movwf	??_display_date
  3678  05D9  01F4               	clrf	??_display_date+1
  3679  05DA  0873               	movf	??_display_date,w
  3680  05DB  00F5               	movwf	display_date@i
  3681  05DC  0874               	movf	??_display_date+1,w
  3682  05DD  00F6               	movwf	display_date@i+1
  3683  05DE                     l1967:	
  3684                           
  3685                           ;clock_src.c: 108:      write_char(i + '0');
  3686  05DE  0875               	movf	display_date@i,w
  3687  05DF  3E30               	addlw	48
  3688  05E0  120A  118A  2135  120A  118A  	fcall	_write_char
  3689  05E5                     l1969:	
  3690                           
  3691                           ;clock_src.c: 109:      delay_time();
  3692  05E5  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3693  05EA                     l1971:	
  3694                           
  3695                           ;clock_src.c: 110:      i=table1[6]&0x0f;
  3696  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3697  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3698  05EC  0826               	movf	_table1+6,w
  3699  05ED  390F               	andlw	15
  3700  05EE  00F3               	movwf	??_display_date
  3701  05EF  01F4               	clrf	??_display_date+1
  3702  05F0  0873               	movf	??_display_date,w
  3703  05F1  00F5               	movwf	display_date@i
  3704  05F2  0874               	movf	??_display_date+1,w
  3705  05F3  00F6               	movwf	display_date@i+1
  3706  05F4                     l1973:	
  3707                           
  3708                           ;clock_src.c: 111:      write_char(i + '0');
  3709  05F4  0875               	movf	display_date@i,w
  3710  05F5  3E30               	addlw	48
  3711  05F6  120A  118A  2135  120A  118A  	fcall	_write_char
  3712  05FB                     l1975:	
  3713                           
  3714                           ;clock_src.c: 112:      delay_time();
  3715  05FB  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3716  0600                     l243:	
  3717  0600  0008               	return
  3718  0601                     __end_of_display_date:	
  3719                           
  3720                           	psect	text22
  3721  0601                     __ptext22:	
  3722 ;; *************** function _display_clock *****************
  3723 ;; Defined at:
  3724 ;;		line 37 in file "clock_src.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  i               2    5[COMMON] int 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         2       0       0       0       0
  3740 ;;      Temps:          2       0       0       0       0
  3741 ;;      Totals:         4       0       0       0       0
  3742 ;;Total ram usage:        4 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    2
  3745 ;; This function calls:
  3746 ;;		_delay_time
  3747 ;;		_write_char
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _display_clock
  3755  0601                     _display_clock:	
  3756  0601                     l1977:	
  3757                           ;incstack = 0
  3758                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3759                           
  3760                           
  3761                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  3762  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0603  1886               	btfsc	6,1	;volatile
  3765  0604  2E06               	goto	u1191
  3766  0605  2E07               	goto	u1190
  3767  0606                     u1191:	
  3768  0606  2E0F               	goto	l1981
  3769  0607                     u1190:	
  3770  0607                     l1979:	
  3771                           
  3772                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  3773  0607  0823               	movf	_table1+3,w
  3774  0608  00F3               	movwf	??_display_clock
  3775  0609  0873               	movf	??_display_clock,w
  3776  060A  00A0               	movwf	_table1
  3777                           
  3778                           ;clock_src.c: 43:           table1[1]=table1[4];
  3779  060B  0824               	movf	_table1+4,w
  3780  060C  00F3               	movwf	??_display_clock
  3781  060D  0873               	movf	??_display_clock,w
  3782  060E  00A1               	movwf	_table1+1
  3783  060F                     l1981:	
  3784                           
  3785                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  3786  060F  0822               	movf	_table1+2,w
  3787  0610  39F0               	andlw	240
  3788  0611  00F3               	movwf	??_display_clock
  3789  0612  01F4               	clrf	??_display_clock+1
  3790  0613  0873               	movf	??_display_clock,w
  3791  0614  00F5               	movwf	display_clock@i
  3792  0615  0874               	movf	??_display_clock+1,w
  3793  0616  00F6               	movwf	display_clock@i+1
  3794  0617                     l1983:	
  3795                           
  3796                           ;clock_src.c: 47:      i=i>>4;
  3797  0617  0E75               	swapf	display_clock@i,w
  3798  0618  390F               	andlw	15
  3799  0619  00F5               	movwf	display_clock@i
  3800  061A  0E76               	swapf	display_clock@i+1,w
  3801  061B  39F0               	andlw	240
  3802  061C  04F5               	iorwf	display_clock@i,f
  3803  061D  0E76               	swapf	display_clock@i+1,w
  3804  061E  390F               	andlw	15
  3805  061F  00F6               	movwf	display_clock@i+1
  3806  0620  30F0               	movlw	240
  3807  0621  1DF6               	btfss	display_clock@i+1,3
  3808  0622  3000               	movlw	0
  3809  0623  04F6               	iorwf	display_clock@i+1,f
  3810  0624                     l1985:	
  3811                           
  3812                           ;clock_src.c: 48:      write_char(i + '0');
  3813  0624  0875               	movf	display_clock@i,w
  3814  0625  3E30               	addlw	48
  3815  0626  120A  118A  2135  120A  118A  	fcall	_write_char
  3816  062B                     l1987:	
  3817                           
  3818                           ;clock_src.c: 49:      delay_time();
  3819  062B  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3820  0630                     l1989:	
  3821                           
  3822                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  3823  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0632  0822               	movf	_table1+2,w
  3826  0633  390F               	andlw	15
  3827  0634  00F3               	movwf	??_display_clock
  3828  0635  01F4               	clrf	??_display_clock+1
  3829  0636  0873               	movf	??_display_clock,w
  3830  0637  00F5               	movwf	display_clock@i
  3831  0638  0874               	movf	??_display_clock+1,w
  3832  0639  00F6               	movwf	display_clock@i+1
  3833  063A                     l1991:	
  3834                           
  3835                           ;clock_src.c: 53:      write_char(i + '0');
  3836  063A  0875               	movf	display_clock@i,w
  3837  063B  3E30               	addlw	48
  3838  063C  120A  118A  2135  120A  118A  	fcall	_write_char
  3839  0641                     l1993:	
  3840                           
  3841                           ;clock_src.c: 54:      write_char(':');
  3842  0641  303A               	movlw	58
  3843  0642  120A  118A  2135  120A  118A  	fcall	_write_char
  3844  0647                     l1995:	
  3845                           
  3846                           ;clock_src.c: 55:      delay_time();
  3847  0647  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3848  064C                     l1997:	
  3849                           
  3850                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  3851  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3852  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3853  064E  0821               	movf	_table1+1,w
  3854  064F  39F0               	andlw	240
  3855  0650  00F3               	movwf	??_display_clock
  3856  0651  01F4               	clrf	??_display_clock+1
  3857  0652  0873               	movf	??_display_clock,w
  3858  0653  00F5               	movwf	display_clock@i
  3859  0654  0874               	movf	??_display_clock+1,w
  3860  0655  00F6               	movwf	display_clock@i+1
  3861  0656                     l1999:	
  3862                           
  3863                           ;clock_src.c: 59:      i=i>>4;
  3864  0656  0E75               	swapf	display_clock@i,w
  3865  0657  390F               	andlw	15
  3866  0658  00F5               	movwf	display_clock@i
  3867  0659  0E76               	swapf	display_clock@i+1,w
  3868  065A  39F0               	andlw	240
  3869  065B  04F5               	iorwf	display_clock@i,f
  3870  065C  0E76               	swapf	display_clock@i+1,w
  3871  065D  390F               	andlw	15
  3872  065E  00F6               	movwf	display_clock@i+1
  3873  065F  30F0               	movlw	240
  3874  0660  1DF6               	btfss	display_clock@i+1,3
  3875  0661  3000               	movlw	0
  3876  0662  04F6               	iorwf	display_clock@i+1,f
  3877  0663                     l2001:	
  3878                           
  3879                           ;clock_src.c: 60:      write_char(i + '0');
  3880  0663  0875               	movf	display_clock@i,w
  3881  0664  3E30               	addlw	48
  3882  0665  120A  118A  2135  120A  118A  	fcall	_write_char
  3883  066A                     l2003:	
  3884                           
  3885                           ;clock_src.c: 61:      delay_time();
  3886  066A  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3887  066F                     l2005:	
  3888                           
  3889                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  3890  066F  1283               	bcf	3,5	;RP0=0, select bank0
  3891  0670  1303               	bcf	3,6	;RP1=0, select bank0
  3892  0671  0821               	movf	_table1+1,w
  3893  0672  390F               	andlw	15
  3894  0673  00F3               	movwf	??_display_clock
  3895  0674  01F4               	clrf	??_display_clock+1
  3896  0675  0873               	movf	??_display_clock,w
  3897  0676  00F5               	movwf	display_clock@i
  3898  0677  0874               	movf	??_display_clock+1,w
  3899  0678  00F6               	movwf	display_clock@i+1
  3900  0679                     l2007:	
  3901                           
  3902                           ;clock_src.c: 64:      write_char(i + '0');
  3903  0679  0875               	movf	display_clock@i,w
  3904  067A  3E30               	addlw	48
  3905  067B  120A  118A  2135  120A  118A  	fcall	_write_char
  3906  0680                     l2009:	
  3907                           
  3908                           ;clock_src.c: 65:      write_char(':');
  3909  0680  303A               	movlw	58
  3910  0681  120A  118A  2135  120A  118A  	fcall	_write_char
  3911  0686                     l2011:	
  3912                           
  3913                           ;clock_src.c: 66:      delay_time();
  3914  0686  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3915  068B                     l2013:	
  3916                           
  3917                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  3918  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3919  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3920  068D  0820               	movf	_table1,w
  3921  068E  39F0               	andlw	240
  3922  068F  00F3               	movwf	??_display_clock
  3923  0690  01F4               	clrf	??_display_clock+1
  3924  0691  0873               	movf	??_display_clock,w
  3925  0692  00F5               	movwf	display_clock@i
  3926  0693  0874               	movf	??_display_clock+1,w
  3927  0694  00F6               	movwf	display_clock@i+1
  3928  0695                     l2015:	
  3929                           
  3930                           ;clock_src.c: 69:      i=i>>4;
  3931  0695  0E75               	swapf	display_clock@i,w
  3932  0696  390F               	andlw	15
  3933  0697  00F5               	movwf	display_clock@i
  3934  0698  0E76               	swapf	display_clock@i+1,w
  3935  0699  39F0               	andlw	240
  3936  069A  04F5               	iorwf	display_clock@i,f
  3937  069B  0E76               	swapf	display_clock@i+1,w
  3938  069C  390F               	andlw	15
  3939  069D  00F6               	movwf	display_clock@i+1
  3940  069E  30F0               	movlw	240
  3941  069F  1DF6               	btfss	display_clock@i+1,3
  3942  06A0  3000               	movlw	0
  3943  06A1  04F6               	iorwf	display_clock@i+1,f
  3944  06A2                     l2017:	
  3945                           
  3946                           ;clock_src.c: 70:      write_char(i + '0');
  3947  06A2  0875               	movf	display_clock@i,w
  3948  06A3  3E30               	addlw	48
  3949  06A4  120A  118A  2135  120A  118A  	fcall	_write_char
  3950  06A9                     l2019:	
  3951                           
  3952                           ;clock_src.c: 71:      delay_time();
  3953  06A9  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3954  06AE                     l2021:	
  3955                           
  3956                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  3957  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3958  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3959  06B0  0820               	movf	_table1,w
  3960  06B1  390F               	andlw	15
  3961  06B2  00F3               	movwf	??_display_clock
  3962  06B3  01F4               	clrf	??_display_clock+1
  3963  06B4  0873               	movf	??_display_clock,w
  3964  06B5  00F5               	movwf	display_clock@i
  3965  06B6  0874               	movf	??_display_clock+1,w
  3966  06B7  00F6               	movwf	display_clock@i+1
  3967  06B8                     l2023:	
  3968                           
  3969                           ;clock_src.c: 74:      write_char(i + '0');
  3970  06B8  0875               	movf	display_clock@i,w
  3971  06B9  3E30               	addlw	48
  3972  06BA  120A  118A  2135  120A  118A  	fcall	_write_char
  3973  06BF                     l2025:	
  3974                           
  3975                           ;clock_src.c: 75:      delay_time();
  3976  06BF  120A  118A  20CB  120A  118A  	fcall	_delay_time
  3977  06C4                     l239:	
  3978  06C4  0008               	return
  3979  06C5                     __end_of_display_clock:	
  3980                           
  3981                           	psect	text23
  3982  0135                     __ptext23:	
  3983 ;; *************** function _write_char *****************
  3984 ;; Defined at:
  3985 ;;		line 28 in file "LCD_src.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  x               1    wreg     unsigned char 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  x               1    2[COMMON] unsigned char 
  3990 ;;  i               2    0        int 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4000 ;;      Params:         0       0       0       0       0
  4001 ;;      Locals:         1       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0
  4003 ;;      Totals:         1       0       0       0       0
  4004 ;;Total ram usage:        1 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    1
  4007 ;; This function calls:
  4008 ;;		_delay_screen
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;;		_display_temp
  4012 ;;		_display_clock
  4013 ;;		_display_date
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _write_char
  4019  0135                     _write_char:	
  4020                           
  4021                           ;incstack = 0
  4022                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4023                           ;write_char@x stored from wreg
  4024  0135  00F2               	movwf	write_char@x
  4025  0136                     l1481:	
  4026                           
  4027                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  4028  0136  1283               	bcf	3,5	;RP0=0, select bank0
  4029  0137  1303               	bcf	3,6	;RP1=0, select bank0
  4030  0138  1685               	bsf	5,5	;volatile
  4031                           
  4032                           ;LCD_src.c: 32:  RA4=0;
  4033  0139  1205               	bcf	5,4	;volatile
  4034                           
  4035                           ;LCD_src.c: 33:  RA3=0;
  4036  013A  1185               	bcf	5,3	;volatile
  4037  013B                     l1483:	
  4038                           
  4039                           ;LCD_src.c: 34:  delay_screen();
  4040  013B  120A  118A  2109  120A  118A  	fcall	_delay_screen
  4041  0140                     l1485:	
  4042                           
  4043                           ;LCD_src.c: 35:  RA3=1;
  4044  0140  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0141  1303               	bcf	3,6	;RP1=0, select bank0
  4046  0142  1585               	bsf	5,3	;volatile
  4047  0143                     l1487:	
  4048                           
  4049                           ;LCD_src.c: 36:  PORTD= x;
  4050  0143  0872               	movf	write_char@x,w
  4051  0144  0088               	movwf	8	;volatile
  4052  0145                     l1489:	
  4053                           
  4054                           ;LCD_src.c: 37:  delay_screen();
  4055  0145  120A  118A  2109  120A  118A  	fcall	_delay_screen
  4056  014A                     l1491:	
  4057                           
  4058                           ;LCD_src.c: 38:  RA3=0;
  4059  014A  1283               	bcf	3,5	;RP0=0, select bank0
  4060  014B  1303               	bcf	3,6	;RP1=0, select bank0
  4061  014C  1185               	bcf	5,3	;volatile
  4062  014D                     l99:	
  4063  014D  0008               	return
  4064  014E                     __end_of_write_char:	
  4065                           
  4066                           	psect	text24
  4067  0109                     __ptext24:	
  4068 ;; *************** function _delay_screen *****************
  4069 ;; Defined at:
  4070 ;;		line 60 in file "LCD_src.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  i               2    0[COMMON] int 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, btemp+1
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         0       0       0       0       0
  4085 ;;      Locals:         2       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0
  4087 ;;      Totals:         2       0       0       0       0
  4088 ;;Total ram usage:        2 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_lcd_init
  4094 ;;		_write_char
  4095 ;;		_write_cmd
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           
  4100                           ;psect for function _delay_screen
  4101  0109                     _delay_screen:	
  4102  0109                     l1465:	
  4103                           ;incstack = 0
  4104                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  4105                           
  4106                           
  4107                           ;LCD_src.c: 61:     int i;;LCD_src.c: 62:  for(i=0;i<5;i++);
  4108  0109  01F0               	clrf	delay_screen@i
  4109  010A  01F1               	clrf	delay_screen@i+1
  4110  010B                     l1471:	
  4111  010B  3001               	movlw	1
  4112  010C  07F0               	addwf	delay_screen@i,f
  4113  010D  1803               	skipnc
  4114  010E  0AF1               	incf	delay_screen@i+1,f
  4115  010F  3000               	movlw	0
  4116  0110  07F1               	addwf	delay_screen@i+1,f
  4117  0111                     l1473:	
  4118  0111  0871               	movf	delay_screen@i+1,w
  4119  0112  3A80               	xorlw	128
  4120  0113  00FF               	movwf	btemp+1
  4121  0114  3080               	movlw	128
  4122  0115  027F               	subwf	btemp+1,w
  4123  0116  1D03               	skipz
  4124  0117  291A               	goto	u615
  4125  0118  3005               	movlw	5
  4126  0119  0270               	subwf	delay_screen@i,w
  4127  011A                     u615:	
  4128  011A  1C03               	skipc
  4129  011B  291D               	goto	u611
  4130  011C  291E               	goto	u610
  4131  011D                     u611:	
  4132  011D  290B               	goto	l1471
  4133  011E                     u610:	
  4134  011E                     l112:	
  4135  011E  0008               	return
  4136  011F                     __end_of_delay_screen:	
  4137                           
  4138                           	psect	text25
  4139  00CB                     __ptext25:	
  4140 ;; *************** function _delay_time *****************
  4141 ;; Defined at:
  4142 ;;		line 148 in file "clock_src.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  i               2    0[COMMON] int 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4156 ;;      Params:         0       0       0       0       0
  4157 ;;      Locals:         2       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0
  4159 ;;      Totals:         2       0       0       0       0
  4160 ;;Total ram usage:        2 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_display_clock
  4166 ;;		_display_date
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           
  4171                           ;psect for function _delay_time
  4172  00CB                     _delay_time:	
  4173  00CB                     l1665:	
  4174                           ;incstack = 0
  4175                           ; Regs used in _delay_time: [wreg+status,2+status,0]
  4176                           
  4177                           
  4178                           ;clock_src.c: 150:      int i;;clock_src.c: 151:      for(i=0x64;i--;);
  4179  00CB  3064               	movlw	100
  4180  00CC  00F0               	movwf	delay_time@i
  4181  00CD  3000               	movlw	0
  4182  00CE  00F1               	movwf	delay_time@i+1
  4183  00CF                     l1667:	
  4184  00CF  30FF               	movlw	255
  4185  00D0  07F0               	addwf	delay_time@i,f
  4186  00D1  1803               	skipnc
  4187  00D2  0AF1               	incf	delay_time@i+1,f
  4188  00D3  30FF               	movlw	255
  4189  00D4  07F1               	addwf	delay_time@i+1,f
  4190  00D5  0A70               	incf	delay_time@i,w
  4191  00D6  1D03               	skipz
  4192  00D7  28DC               	goto	u751
  4193  00D8  0A71               	incf	delay_time@i+1,w
  4194  00D9  1D03               	btfss	3,2
  4195  00DA  28DC               	goto	u751
  4196  00DB  28DD               	goto	u750
  4197  00DC                     u751:	
  4198  00DC  28CF               	goto	l1667
  4199  00DD                     u750:	
  4200  00DD                     l261:	
  4201  00DD  0008               	return
  4202  00DE                     __end_of_delay_time:	
  4203                           
  4204                           	psect	text26
  4205  00F3                     __ptext26:	
  4206 ;; *************** function _delay_lcd *****************
  4207 ;; Defined at:
  4208 ;;		line 54 in file "LCD_src.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  i               2    0[COMMON] int 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, btemp+1
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4222 ;;      Params:         0       0       0       0       0
  4223 ;;      Locals:         2       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0
  4225 ;;      Totals:         2       0       0       0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _delay_lcd
  4237  00F3                     _delay_lcd:	
  4238  00F3                     l1427:	
  4239                           ;incstack = 0
  4240                           ; Regs used in _delay_lcd: [wreg+status,2+btemp+1]
  4241                           
  4242                           
  4243                           ;LCD_src.c: 56:  int i;;LCD_src.c: 57:  for(i=0;i<4000;i++);
  4244  00F3  01F0               	clrf	delay_lcd@i
  4245  00F4  01F1               	clrf	delay_lcd@i+1
  4246  00F5                     l1433:	
  4247  00F5  3001               	movlw	1
  4248  00F6  07F0               	addwf	delay_lcd@i,f
  4249  00F7  1803               	skipnc
  4250  00F8  0AF1               	incf	delay_lcd@i+1,f
  4251  00F9  3000               	movlw	0
  4252  00FA  07F1               	addwf	delay_lcd@i+1,f
  4253  00FB                     l1435:	
  4254  00FB  0871               	movf	delay_lcd@i+1,w
  4255  00FC  3A80               	xorlw	128
  4256  00FD  00FF               	movwf	btemp+1
  4257  00FE  308F               	movlw	143
  4258  00FF  027F               	subwf	btemp+1,w
  4259  0100  1D03               	skipz
  4260  0101  2904               	goto	u605
  4261  0102  30A0               	movlw	160
  4262  0103  0270               	subwf	delay_lcd@i,w
  4263  0104                     u605:	
  4264  0104  1C03               	skipc
  4265  0105  2907               	goto	u601
  4266  0106  2908               	goto	u600
  4267  0107                     u601:	
  4268  0107  28F5               	goto	l1433
  4269  0108                     u600:	
  4270  0108                     l107:	
  4271  0108  0008               	return
  4272  0109                     __end_of_delay_lcd:	
  4273  007E                     btemp	set	126	;btemp
  4274  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _set_time->_time_write_1
    _lcd_init->_write_cmd
    _write_cmd->_delay_screen
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_delay_temp
    _display_date->_write_char
    _display_clock->_write_char
    _write_char->_delay_screen

Critical Paths under _main in BANK0

    _main->_get_temp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6838
                          _delay_lcd
                      _display_clock
                       _display_date
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                           _lcd_init
                           _set_time
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    4642
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     865
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     776
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     822
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         2     2      0     819
                                              4 COMMON     2     2      0
                         _delay_temp
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     751
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     275
                                              3 COMMON     4     4      0
                         _delay_time
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     298
                                              3 COMMON     4     4      0
                         _delay_time
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _delay_time                                           2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay_lcd                                            2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_lcd
   _display_clock
     _delay_time
     _write_char
       _delay_screen
   _display_date
     _delay_time
     _write_char
       _delay_screen
   _display_temp
     _delay_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _set_time
     _time_write_1
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 27 22:32:54 2019

                      pc 0002                       l93 00B8                       l96 018E  
                     l99 014D                       _TX 0030                       _TZ 0031  
           ___awdiv@sign 0076                       _ge 002E                       _wd 0027  
                     fsr 0004            ?_display_date 0070                      l102 0166  
                    l112 011E                      l200 0134                      l107 0108  
                    l230 0216                      l225 00F2                      l153 00A7  
                    l162 02C3                      l234 01E4                      l243 0600  
                    l235 01E7                      l156 0436                      l500 049E  
                    l180 02BF                      l172 0334                      l252 021D  
                    l261 00DD                      l253 0244                      l229 0213  
                    l158 0437                      l246 0192                      l166 02F9  
                    l239 06C4                      l191 00BA                      l247 01B6  
                    l255 024B                      l249 01B9                      l513 03D1  
                    l195 00CA                      l188 07F2                      l619 0378  
                    l629 0285                      _RA0 0028                      _RA2 002A  
                    _RB0 0030                      _RA3 002B                      _RB1 0031  
                    _RA4 002C                      _RC0 0038                      _RA5 002D  
                    _RB4 0034                      _RB5 0035                      _RE1 0049  
                    u600 0108                      u601 0107                      u610 011E  
                    u611 011D                      u620 00C4                      u700 0134  
                    u605 0104                      u621 00C3                      u701 0133  
                    u630 00CA                      u710 019A                      u615 011A  
                    u631 00C9                      u711 0199                      u720 01B6  
                    u800 046B                      u640 02E6                      u721 01B5  
                    u801 046A                      u705 0130                      u641 02E5  
                    u650 02F9                      u730 022B                      u651 02F8  
                    u731 022A                      u820 047C                      u900 03A6  
                    u660 0314                      u740 0244                      u725 01B2  
                    u821 047B                      u901 03A5                      u661 0313  
                    u741 0243                      u750 00DD                      u910 03B0  
                    u670 0334                      u751 00DC                      u815 046C  
                    u911 03AF                      u671 0333                      u840 0490  
                    u760 043D                      u680 02AC                      u841 048F  
                    u825 0478                      u761 043C                      u681 02AB  
                    u745 0240                      u850 0495                      u770 0448  
                    u930 03C3                      u690 02BE                      u851 0494  
                    u835 0484                      u771 0447                      u931 03C2  
                    u915 03AC                      u691 02BD                      u780 0459  
                    u940 03C8                      u860 037E                      u781 0458  
                    u941 03C7                      u925 03B7                      u861 037D  
                    u870 0389                      u950 033D                      u871 0388  
                    u951 033C                      u880 0394                      u881 0393  
                    u970 034F                      u795 045D                      u971 034E  
                    u965 0341                      u990 0360                      _THV 0032  
                    u895 0398                      u991 035F            ?_display_temp 0070  
                    u985 0350                      u995 035C                      _TLV 0033  
                    _shi 002F                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   l2001 0663                     l2011 0686                     l2003 066A  
                   l1211 00B4                     l2021 06AE                     l2013 068B  
                   l2005 066F                     l1213 00B5                     l2023 06B8  
                   l2015 0695                     l2007 0679                     l1215 00B6  
                   l2031 04A8                     l2025 06BF                     l2017 06A2  
                   l2009 0680                     l1217 00B7                     l1209 00B0  
                   l2041 04C1                     l2033 04AD                     l2019 06A9  
                   l2051 04DF                     l2043 04C7                     l2035 04B2  
                   l2027 049F                     l1237 00A4                     l1501 015E  
                   l2053 04E4                     l2045 04CD                     l2037 04B7  
                   l2029 04A3                     l1511 02E0                     l1503 0163  
                   l2047 04D3                     l2039 04BC                     l1433 00F5  
                   l1601 02A7                     l1513 02E6                     l1505 02C0  
                   l1521 02FB                     l2049 04D9                     l1435 00FB  
                   l1427 00F3                     l1611 02BE                     l1603 02AC  
                   l1515 02E9                     l1507 02C9                     l1531 0307  
                   l1701 0483                     l1621 0121                     l1605 02AD  
                   l1517 02EA                     l1509 02D3                     l1541 030E  
                   l1533 030A                     l1471 010B                     l1631 019A  
                   l1703 048A                     l1623 0127                     l1615 011F  
                   l1607 02B7                     l1519 02F4                     l1551 0324  
                   l1543 030F                     l1535 030B                     l1527 02FF  
                   l1473 0111                     l1465 0109                     l1481 0136  
                   l1633 019B                     l1625 0190                     l1705 0490  
                   l1721 0385                     l1713 0379                     l1609 02B9  
                   l1561 0286                     l1553 0325                     l1545 0314  
                   l1537 030C                     l1529 0304                     l1641 0217  
                   l1801 01EB                     l1491 014A                     l1483 013B  
                   l1475 00BA                     l1635 01A2                     l1707 0495  
                   l1731 039E                     l1723 0389                     l1715 037A  
                   l1571 028D                     l1563 0287                     l1555 0326  
                   l1547 0317                     l1539 030D                     l1651 0227  
                   l1643 0218                     l1811 0200                     l1803 01F1  
                   l1485 0140                     l1477 00BE                     l1901 03EE  
                   l1637 01A3                     l1709 049A                     l1741 03BD  
                   l1733 03A2                     l1725 038E                     l1717 037E  
                   l1581 0296                     l1573 0290                     l1557 032D  
                   l1549 0321                     l1661 024A                     l1653 022B  
                   l1493 014F                     l1821 0167                     l1813 0206  
                   l1487 0143                     l1479 00C4                     l1911 0434  
                   l1903 03F4                     l1639 01A9                     l1815 00DE  
                   l1671 0439                     l1735 03A6                     l1727 0394  
                   l1743 03C3                     l1719 0383                     l1751 0335  
                   l1591 029D                     l1583 0297                     l1575 0293  
                   l1559 032F                     l1655 0230                     l1495 0154  
                   l1831 0176                     l1823 016A                     l1665 00CB  
                   l1489 0145                     l1905 0407                     l1817 00E3  
                   l1681 044D                     l1673 043D                     l1745 03C8  
                   l1737 03B0                     l1729 0397                     l1761 034B  
                   l1753 0337                     l1593 029E                     l1585 0298  
                   l1577 0294                     l1569 028B                     l1841 06C8  
                   l1657 0231                     l1649 0220                     l1913 01BA  
                   l1497 0159                     l1833 017C                     l1825 016D  
                   l1809 01F3                     l1667 00CF                     l1931 0550  
                   l1907 0411                     l1819 00EF                     l1691 0463  
                   l1683 0451                     l1675 0442                     l1747 03CD  
                   l1739 03B6                     l1771 036E                     l1763 034F  
                   l1755 033D                     l1595 029F                     l1587 0299  
                   l1579 0295                     l1851 06E9                     l1843 06D3  
                   l1659 0237                     l1923 01C5                     l1915 01BD  
                   l1499 015C                     l1835 0182                     l1827 0172  
                   l1941 0579                     l1933 0558                     l1909 0424  
                   l1693 0467                     l1685 0453                     l1677 0444  
                   l1669 0438                     l1765 0360                     l1757 0340  
                   l1773 0374                     l1781 0255                     l1597 02A0  
                   l1589 029C                     l1861 0720                     l1853 06EF  
                   l1845 06D8                     l1925 01D1                     l1917 01C3  
                   l1837 0188                     l1829 0175                     l1951 059F  
                   l1943 0583                     l1935 0560                     l1695 046B  
                   l1687 0459                     l1679 0448                     l1767 0366  
                   l1759 0347                     l1791 0274                     l1783 025C  
                   l1599 02A1                     l1871 075F                     l1855 06F9  
                   l1847 06DE                     l1839 06C5                     l1927 01D7  
                   l1961 05C9                     l1953 05AC                     l1945 058A  
                   l1937 056D                     l1929 054A                     l1697 047C  
                   l1689 045C                     l1769 0367                     l1793 027B  
                   l1785 0260                     l1777 024C                     l1881 077F  
                   l1873 0767                     l1865 072D                     l1857 0703  
                   l1849 06E3                     l1971 05EA                     l1963 05CF  
                   l1955 05B3                     l1947 0590                     l1939 0574  
                   l1699 0482                     l1787 0264                     l1779 0252  
                   l1795 0281                     l1891 07DE                     l1883 0783  
                   l1875 076B                     l1867 0759                     l1859 0706  
                   l1981 060F                     l1973 05F4                     l1965 05D4  
                   l1957 05B8                     l1949 0595                     l1789 026E  
                   l1893 07F1                     l1885 078B                     l1877 0773  
                   l1869 075B                     l1991 063A                     l1983 0617  
                   l1975 05FB                     l1967 05DE                     l1959 05C2  
                   l1895 03D2                     l1887 079E                     l1879 0777  
                   l1799 01E8                     l1993 0641                     l1985 0624  
                   l1977 0601                     l1969 05E5                     l1897 03DB  
                   l1889 07BE                     l1995 0647                     l1987 062B  
                   l1979 0607                     l1899 03E5                     l1997 064C  
                   l1989 0630                     l1999 0656           ?_display_clock 0070  
                   u1010 0374                     u1011 0373                     u1020 0252  
                   u1005 0368                     u1021 0251                     u1040 0264  
                   u1120 075F                     u1041 0263                     u1121 075E  
                   u1105 0716                     u1050 026E                     u1130 076B  
                   u1051 026D                     u1035 0256                     u1131 076A  
                   u1115 0723                     u1140 0777                     u1141 0776  
                   u1070 0281                     u1150 0783                     u1071 0280  
                   u1055 026A                     u1151 0782                     u1160 0434  
                   u1080 0213                     u1161 0433                     u1065 0275  
                   u1081 0212                     u1170 01E4                     u1171 01E3  
                   u1180 0550                     u1181 054F                     u1085 020F  
                   u1190 0607                     u1191 0606                     u1095 070B  
                   u1175 01E0                     _main 049F                     _init 00B0  
                   btemp 007E            write_byte@val 0077                     start 0000  
         ??_display_date 0073                    ?_main 0070           ??_display_temp 0074  
                  ?_init 0070          __end_of___awdiv 049F            __CFG_WDTE$OFF 0000  
        __end_of___awmod 03D2          ___awdiv@divisor 0070     __end_of_delay_screen 011F  
        __end_of___lwdiv 0379          __end_of___lwmod 0286          ___awdiv@counter 0075  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
          __CFG_PWRTE$ON 0000                    _table 0009           write_byte@temp 0076  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E            ??_ds1302_init 0075          __initialization 07F3  
           __end_of_main 054A             __end_of_init 00B9                   ??_main 007E  
                 ??_init 0070          ??_display_clock 0073                   _ADCON1 009F  
       ___awdiv@dividend 0072                   _TRISA0 0428                   _TRISC0 0438  
                 _TRISB4 0434         __end_of_lcd_init 018F         __end_of_get_temp 07F3  
       __end_of_get_time 01E8                   _baifen 002C                ??___awdiv 0074  
              ??___awmod 0074                   _delay2 011F                ??___lwdiv 007A  
              ??___lwmod 0074      __end_of_ds1302_init 00F3                   _table1 0020  
       ___awdiv@quotient 0077          ___awmod@divisor 0070                   _shifen 002D  
                 _wanfen 002A          ___awmod@counter 0075             ?_time_read_1 0070  
    time_write_1@time_tx 0074            display_date@i 0075         __end_of_set_time 0217  
     reset_temp@presence 0075  __end_of__initialization 07FC     __end_of_display_date 0601  
   __end_of_display_temp 0438           __pcstackCOMMON 0070    __size_of_delay_screen 0016  
          __end_of_table 0011       __size_of_delay_lcd 0016               __pbssBANK0 0020  
           _delay_screen 0109       __size_of_init_temp 0004       __size_of_read_byte 003A  
            _ds1302_init 00DE               _delay_temp 00B9               _delay_time 00CB  
             __pmaintext 049F                  ?_delay2 0070       time_read_1@time_rx 0074  
              ?_lcd_init 0070                ?_get_temp 0070                ?_get_time 0070  
             __stringtab 0003        __end_of_delay_lcd 0109       __size_of_write_cmd 0019  
              ?_set_time 0070                  ___awdiv 0438                  ___awmod 0379  
        __size_of_delay2 0016                  ___lwdiv 0335                  ___lwmod 024C  
                __ptext1 01E8                  __ptext2 0167                  __ptext3 014E  
                __ptext4 00A4                  __ptext5 00B0                  __ptext6 01BA  
                __ptext7 0217                  __ptext8 06C5                  __ptext9 02FA  
                delay2@i 0070        __end_of_init_temp 00A8         ___awmod@dividend 0072  
      __end_of_read_byte 02C0                  _qianfen 002B     __size_of_time_read_1 0035  
  __size_of_display_date 00B7                  clrloop0 00A9               ??_lcd_init 0073  
             delay_lcd@i 0070               ??_get_temp 0034               ??_get_time 0075  
  __size_of_display_temp 0066     end_of_initialization 07FC           display_clock@i 0075  
          ?_time_write_1 0070              ?_delay_temp 0070              ?_delay_time 0070  
             _reset_temp 02C0               ??_set_time 0075             _display_date 054A  
           _display_temp 03D2        __end_of_write_cmd 0167    __end_of_display_clock 06C5  
         ??_time_write_1 0070           __end_of_delay2 0135               _write_char 0135  
             _write_byte 02FA      start_initialization 07F3            delay_screen@i 0070  
    __size_of_delay_temp 0012      __size_of_delay_time 0013             ?_ds1302_init 0070  
            ?_reset_temp 0070                 ??_delay2 0070               read_byte@i 0076  
             read_byte@j 0029                ___latbits 0002            __pcstackBANK0 0034  
      __size_of_lcd_init 0028        __size_of_get_temp 012E        __size_of_get_time 002E  
       ___lwdiv@dividend 0078                _delay_lcd 00F3                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
      __size_of_set_time 002F              ?_write_char 0070              ?_write_byte 0070  
              __pstrings 0003     __end_of_time_write_1 01BA      __size_of_reset_temp 003A  
       ___lwdiv@quotient 007B                _init_temp 00A4                _read_byte 0286  
              clear_ram0 00A8             ??_delay_temp 0071             ??_delay_time 0070  
             ?_delay_lcd 0070              __stringbase 0008            ??_time_read_1 0070  
            write_char@x 0072                get_time@i 0076              write_byte@i 0078  
     __end_of_delay_temp 00CB       __end_of_delay_time 00DE                _write_cmd 014E  
             ?_init_temp 0070               ?_read_byte 0070      __size_of_write_char 0019  
    __size_of_write_byte 003B     __size_of_ds1302_init 0015         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003A  
     __end_of__stringtab 0009          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
               __ptext10 02C0                 __ptext11 0286                 __ptext20 00B9  
               __ptext12 011F                 __ptext21 054A                 __ptext13 024C  
               __ptext22 0601                 __ptext14 0335                 __ptext23 0135  
               __ptext15 0379                 __ptext24 0109                 __ptext16 0438  
               __ptext25 00CB                 __ptext17 00DE                 __ptext26 00F3  
               __ptext18 018F                 __ptext19 03D2      __end_of_time_read_1 024C  
             ?_write_cmd 0070                 _lcd_init 0167                 _get_temp 06C5  
               _get_time 01BA            __size_of_main 00AB            __size_of_init 0009  
          ?_delay_screen 0070                set_time@i 0075              ??_delay_lcd 0070  
           ??_reset_temp 0074                 _set_time 01E8               write_cmd@x 0072  
  __size_of_time_write_1 002B   __size_of_display_clock 00C4              delay_temp@x 0072  
            delay_temp@y 0070              delay_temp@z 0073              delay_time@i 0070  
         read_byte@value 0075              ??_init_temp 0070       __end_of_reset_temp 02FA  
            ??_read_byte 0074         ___lwmod@dividend 0072           ??_delay_screen 0070  
              stringcode 0003             _time_write_1 018F             ??_write_char 0072  
           ??_write_byte 0074               _OPTION_REG 0081              _time_read_1 0217  
           time_read_1@j 0072          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 0003                 stringtab 0003              ??_write_cmd 0072  
          _display_clock 0601            time_write_1@j 0072       __end_of_write_char 014E  
     __end_of_write_byte 0335  
